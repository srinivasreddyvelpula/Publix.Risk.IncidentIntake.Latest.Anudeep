{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "RiskmasterAPI v2"
  },
  "host": "drmxa001",
  "basePath": "/RiskmasterAPI",
  "schemes": [
    "http"
  ],
  "paths": {
    "/v2/attachments": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachments",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UploadAttachments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentsDeleteRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsOptions",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UpdateAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/restrictions": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetRestrictions",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      }
    },
    "/v2/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentDetails",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/attachments": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsAsClaimRootv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_CreateAttachmentAsClaimv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentForm"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsAsClaimRootOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/attachments": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsAsEventv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_CreateAttachmentAsEventv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentForm"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsAsEventOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      }
    },
    "/v2/attachments/getfile/{attachmentid}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DownLoadFile",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          }
        }
      }
    },
    "/v2/attachments/{attachmentId}/preview": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_PreviewFile",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageInfo"
              }
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentOptions",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/attachments/{attachmentId}/download": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetDownloadURl",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments-elastic": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentDetailsForElasticSearch",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startdate",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttachmentsForElasticSearch"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UpdateAttachmentDetailsForElasticSearch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lstAttachmentsForElasticSearch",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttachmentsForElasticSearch"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/{attachmentId}/getfiledetails": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetFileDetails",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/notes/{noteId}/attachments": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsAsClaimNoteRootv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_CreateAttachmentAsNoteClaimRootv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentForm"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsAsClaimRootNoteOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/notes/{noteId}/attachments": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsAsEventNoteRootv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadGetAttachmentsAsEventNoteRootv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/attachments/{attachRecordId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsAsClaimRootv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsAsClaimRootOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/attachments/{attachRecordId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsAsEventv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsAsEventOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/notes/{noteId}/notes/{attachRecordId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsAsClaimNoteRootv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsAsClaimRootNoteOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/notes/{noteId}/attachments/{attachRecordId}": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentAsEventNoteRootv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachments"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_LoadAttachmentsAsEventNoteRootOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/attachments/folders": {
      "get": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_FoldersList",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "TableName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "RecordId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FolderNew"
              }
            }
          }
        }
      }
    },
    "/v2/attachments/levelall": {
      "put": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_GetAttachmentsLevelAll",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "objAttachmentLevel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/v2/attachments/copy": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_CopyAttachments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transferDocumentsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferDocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/move": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_MoveDocuments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "moveDocumentsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveDocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/email": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_EmailDocuments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailDocumentsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailDocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/emailnew": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_EmailDocumentsnew",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailDocumentsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailDocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/transfer": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_TransferDocuments",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transferDocumentsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferDocumentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/createFolder": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_CreateFolder",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FolderTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/addfiledetails": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_AddFileDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "objDynamic",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/sendfiletoimageright": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_ApproveFiles",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "objDynamic",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/claims{claimId}/attachments/{AttachmentId}": {
      "patch": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UpdateAttachmentClaimv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/events{eventId}/attachments/{AttachmentId}": {
      "patch": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UpdateAttachmentEventv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/claims{claimId}/notes/{noteId}/attachments/{AttachmentId}": {
      "patch": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UpdateAttachmentClaimNotev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/events{eventId}/notes/{noteId}/attachments/{AttachmentId}": {
      "patch": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UpdateAttachmentEventNotev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachment/clean": {
      "delete": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DeleteTempFiles",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "TempFileName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/v2/attachments/folder/{folderId}": {
      "delete": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DeleteFolder",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "folderId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/document/{AttachmentId}": {
      "delete": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DeleteDocument",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachmentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/{recordId}/document/{AttachmentId}": {
      "delete": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DeleteDocumentClaimv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachmentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/attachments/{claimId}/notes/{noteId}/document/{AttachmentId}": {
      "delete": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DeleteDocumentNotev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachmentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants": {
      "get": {
        "tags": [
          "Claimant"
        ],
        "summary": "Gets the claimants.",
        "operationId": "Claimant_GetClaimantsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claimant"
        ],
        "summary": "Creates the claimant.",
        "operationId": "Claimant_CreateClaimantv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantInstance",
            "in": "body",
            "description": "The claimant instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claimant"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Claimant"
        ],
        "summary": "Options for the transaction list",
        "operationId": "Claimant_GetClaimantsOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}": {
      "get": {
        "tags": [
          "Claimant"
        ],
        "summary": "Gets the claimant.",
        "operationId": "Claimant_GetClaimantv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "The claimant identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Claimant"
        ],
        "summary": "Saves the claimant",
        "operationId": "Claimant_SaveClaimantv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantInstance",
            "in": "body",
            "description": "The claimant.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claimant"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claimant"
        ],
        "summary": "Delete the claimant",
        "operationId": "Claimant_DeleteClaimantv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "The claimant row identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Claimant"
        ],
        "summary": "Options for specific transaction",
        "operationId": "Claimant_GetClaimantOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "The claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/personinvolvedlist": {
      "get": {
        "tags": [
          "Claimant"
        ],
        "summary": "Gets the person involved.",
        "operationId": "Claimant_GetClaimantLookupPersonInvolvedListv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "The claimant Row identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Gets the claim.",
        "operationId": "Claims_GetClaimFromClaimId",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Claims"
        ],
        "summary": "Saves the claim.",
        "operationId": "Claims_SaveDirectClaim",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimInstance",
            "in": "body",
            "description": "The claim instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claims"
        ],
        "summary": "Deletes the claim.",
        "operationId": "Claims_DeleteDirectClaim",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Claims"
        ],
        "summary": "Gets the claims options.",
        "operationId": "Claims_GetDirectClaimOptions",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HalOptions"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/claims": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Gets the claims.",
        "operationId": "Claims_GetClaims",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Creates the claim.",
        "operationId": "Claims_CreateClaim",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimInstance",
            "in": "body",
            "description": "The claim instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Claims"
        ],
        "summary": "Options for associated claims with the event resource.",
        "operationId": "Claims_ClaimsOptions",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/claims/{claimId}": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Gets the claim.",
        "operationId": "Claims_GetClaim",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Claims"
        ],
        "summary": "Saves the claim.",
        "operationId": "Claims_SaveClaim",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimInstance",
            "in": "body",
            "description": "The claim instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Claims"
        ],
        "summary": "Deletes the claim.",
        "operationId": "Claims_DeleteClaim",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Claims"
        ],
        "summary": "Gets the claims options.",
        "operationId": "Claims_GetClaimOptions",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HalOptions"
            }
          }
        }
      }
    },
    "/v2/claims": {
      "post": {
        "tags": [
          "Claims"
        ],
        "summary": "Creates the claim.",
        "operationId": "Claims_CreateDirectClaim",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimInstance",
            "in": "body",
            "description": "The claim instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/diaries": {
      "get": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the claim diaries list",
        "operationId": "Diary_LoadClaimDiariesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Creates the diary.",
        "operationId": "DiaryEntry_CreateClaimDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The claimant instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the claim diaries.",
        "operationId": "Diary_LoadClaimDiariesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDiaryList"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/diaries": {
      "get": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the event diaries list",
        "operationId": "Diary_LoadEventDiariesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Creates the diary.",
        "operationId": "DiaryEntry_CreateEventDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The claimant instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the event diaries",
        "operationId": "Diary_LoadEventDiariesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDiaryList"
            }
          }
        }
      }
    },
    "/v2/transactions/{transactionId}/diaries": {
      "get": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the transaction diaries",
        "operationId": "Diary_LoadTransactionDiariesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the tranaction diaries",
        "operationId": "Diary_LoadTransactionDiariesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDiaryList"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/diaries": {
      "get": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the claimant diaries list",
        "operationId": "Diary_LoadClaimantDiariesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Creates the diary.",
        "operationId": "DiaryEntry_CreateClaimantantDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The claimant instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Diary"
        ],
        "summary": "Gets the claim diaries.",
        "operationId": "Diary_LoadClaimantDiariesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetDiaryList"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/diaries/{entryId}": {
      "get": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get diary record or blank record",
        "operationId": "DiaryEntry_GetClaimDiaryv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry id identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "update  the Diary Record",
        "operationId": "DiaryEntry_SaveClaimDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The Diary Record.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get diary record or blank record",
        "operationId": "DiaryEntry_GetClaimDiaryOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Diary identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/diaries/{entryId}": {
      "get": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get diary record or blank record",
        "operationId": "DiaryEntry_GetEventDiaryv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry id identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "update  the Diary Record",
        "operationId": "DiaryEntry_SaveEventDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The Diary Record.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get diary record or blank record",
        "operationId": "DiaryEntry_GetEventDiaryOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Diary identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/transactions/{transactionId}/diaries/{entryId}": {
      "get": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get diary record or blank record",
        "operationId": "DiaryEntry_GetTransactionDiaryv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry id identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get transaction diary record or blank record",
        "operationId": "DiaryEntry_GetTransactionDiaryOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Diary identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/diaries/{entryId}": {
      "get": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get diary record or blank record",
        "operationId": "DiaryEntry_GetClaimantDiaryv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Entry id identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "update  the Diary Record",
        "operationId": "DiaryEntry_SaveClaimantDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The Diary Record.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Get diary record or blank record",
        "operationId": "DiaryEntry_GetClaimantDiaryOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "path",
            "description": "Diary identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/transaction/{transactionId}/diaries/{entryId}": {
      "put": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Update  the diary record",
        "operationId": "DiaryEntry_SaveTransactionDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The Diary Record.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/transaction/{transactionId}/diaries": {
      "post": {
        "tags": [
          "DiaryEntry"
        ],
        "summary": "Creates the diary.",
        "operationId": "DiaryEntry_CreateTransactionDiaryv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diaryInstance",
            "in": "body",
            "description": "The claimant instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WpaDiaryEntry"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/Entities": {
      "get": {
        "tags": [
          "EntityMaint"
        ],
        "summary": "Gets the entity list.",
        "operationId": "EntityMaint_GetEntitiesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EntityMaint"
        ],
        "summary": "Create mew entity",
        "operationId": "EntityMaint_CreateEntities",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityinstance",
            "in": "body",
            "description": "entity model class object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "EntityMaint"
        ],
        "summary": "Options method for entity listing",
        "operationId": "EntityMaint_GetEntitiesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/Entities/{entityId}": {
      "get": {
        "tags": [
          "EntityMaint"
        ],
        "summary": "Gets a specific entity",
        "operationId": "EntityMaint_GetEntityv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EntityMaint"
        ],
        "summary": "Update the Entity.",
        "operationId": "EntityMaint_SaveEntityv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityinstance",
            "in": "body",
            "description": "Entity instance model class object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "EntityMaint"
        ],
        "summary": "Options method for specific entity",
        "operationId": "EntityMaint_GetEntityOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          }
        }
      }
    },
    "/v2/Entities/{entityid}": {
      "delete": {
        "tags": [
          "EntityMaint"
        ],
        "summary": "Delete the entity",
        "operationId": "EntityMaint_DeleteEntityv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityid",
            "in": "path",
            "description": "The entity row identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Gets the event.",
        "operationId": "Event_GetEventv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Saves the event.",
        "operationId": "Event_SaveEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventInstance",
            "in": "body",
            "description": "The event instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Deletes the event.",
        "operationId": "Event_DeleteEvent",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Event"
        ],
        "summary": "Options for the event resource.",
        "operationId": "Event_EventOptions",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "The event identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/attachmentList": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Gets the event attachment list",
        "operationId": "Event_GetEventAttachmentList",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "event Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Creates the event.",
        "operationId": "Event_CreateEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventInstance",
            "in": "body",
            "description": "The event instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get all notes",
        "operationId": "Notes_LoadClaimNotesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Notes"
        ],
        "operationId": "Notes_LoadClaimNotesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProgressNotesType"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get all notes",
        "operationId": "Notes_LoadEventNotesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Notes"
        ],
        "operationId": "Notes_LoadEventNotesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProgressNotesType"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/notes/{AttachRecordId}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets the note detail of selected note.",
        "operationId": "Notes_GetClaimNotev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AttachRecordId",
            "in": "path",
            "description": "The attach record identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetNoteDetailsObject"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/notes/{AttachRecordId}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets the note detail of selected note.",
        "operationId": "Notes_GetEventNotev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AttachRecordId",
            "in": "path",
            "description": "The attach record identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetNoteDetailsObject"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/notes/{AttachedRecordId}": {
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Edits the Note",
        "operationId": "Notes_UpdateClaimNotev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "p_objProgressNote",
            "in": "body",
            "description": "ProgressNote Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachedRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates the note",
        "operationId": "Notes_SaveClaimNotev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "p_objProgressNote",
            "in": "body",
            "description": "ProgressNote Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachedRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes note.",
        "operationId": "Notes_DeleteClaimNotev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AttachRecordId",
            "in": "query",
            "description": "The attach record identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AttachedRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/notes/{AttachedRecordId}": {
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Edits the Note",
        "operationId": "Notes_UpdateEventNotev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "p_objProgressNote",
            "in": "body",
            "description": "ProgressNote Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachedRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates the note",
        "operationId": "Notes_SaveEventNotev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "p_objProgressNote",
            "in": "body",
            "description": "ProgressNote Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AttachedRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProgressNote"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes note.",
        "operationId": "Notes_DeleteEventNotev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "event identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AttachRecordId",
            "in": "query",
            "description": "The attach record identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "AttachedRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/APIMessage"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/notes/{attachRecordId}": {
      "options": {
        "tags": [
          "Notes"
        ],
        "operationId": "Notes_GetClaimNoteOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/events/{eventId}/notes/{attachRecordId}": {
      "options": {
        "tags": [
          "Notes"
        ],
        "operationId": "Notes_GetEventNoteOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "attachRecordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/reserves/{reserveRowId}": {
      "get": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "Get method for specific claim reserve.",
        "operationId": "ReserveCurrent_GetClaimReservev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveRowId",
            "in": "path",
            "description": "The reserve row identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "Saves the reserve.",
        "operationId": "ReserveCurrent_SaveClaimReservev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservecurrentInstance",
            "in": "body",
            "description": "The reserve current instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReserveCurrent"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reserveRowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "Options method for specific claim reserve.",
        "operationId": "ReserveCurrent_GetClaimReserveOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveRowId",
            "in": "path",
            "description": "The reserve row identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/reserves/{reserveRowId}": {
      "get": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "Get method for specific claim reserve.",
        "operationId": "ReserveCurrent_GetClaimantReservev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The claim identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveRowId",
            "in": "path",
            "description": "The reserve row identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "Saves the reserve.",
        "operationId": "ReserveCurrent_SaveClaimantReservev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservecurrentInstance",
            "in": "body",
            "description": "The reserve current instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReserveCurrent"
            }
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reserveRowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "Options method for specific claim reserve.",
        "operationId": "ReserveCurrent_GetClaimantReserveOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "The claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveRowId",
            "in": "path",
            "description": "The reserve row identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/reserves": {
      "get": {
        "tags": [
          "Reserves"
        ],
        "summary": "Gets the reserve listing at claim level.",
        "operationId": "Reserves_GetClaimReservesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "create new reserve",
        "operationId": "ReserveCurrent_CreateClaimReservev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservecurrentInstance",
            "in": "body",
            "description": "The reserve current instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReserveCurrent"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Reserves"
        ],
        "summary": "Options for claim level reserve listing",
        "operationId": "Reserves_GetClaimReservesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReserveList"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/reserves": {
      "get": {
        "tags": [
          "Reserves"
        ],
        "summary": "Gets the reserve list at claimant level.",
        "operationId": "Reserves_GetClaimantReservesv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResultViewList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReserveCurrent"
        ],
        "summary": "create new reserve",
        "operationId": "ReserveCurrent_CreateClaimantReservev2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservecurrentInstance",
            "in": "body",
            "description": "The reserve current instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReserveCurrent"
            }
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Reserves"
        ],
        "summary": "Options for claimant level reserve listing",
        "operationId": "Reserves_GetClaimantReservesOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReserveList"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/financialsummary": {
      "get": {
        "tags": [
          "Reserves"
        ],
        "summary": "Get financial Summary",
        "operationId": "Reserves_GetFinancialSummaryv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FinancialSummary"
            }
          }
        }
      }
    },
    "/v2/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets the orphaned transaction list.",
        "operationId": "Transaction_GetOrphanTransactionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Creates new orphan transaction",
        "operationId": "Transaction_CreateOrphanTransaction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundsInstance",
            "in": "body",
            "description": "The funds instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Funds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets the specific orphan transaction.",
        "operationId": "Transaction_GetOrphanTransactionv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The trans identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transaction"
        ],
        "summary": "Updates the orphaned transaction",
        "operationId": "Transaction_SaveOrphanTransaction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundsInstance",
            "in": "body",
            "description": "The funds instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Funds"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets the transactions list.",
        "operationId": "Transaction_GetClaimTransactionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Options for the transaction list",
        "operationId": "Transaction_GetClaimTransactionsOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets a specific transaction.",
        "operationId": "Transaction_GetClaimTransactionv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transaction"
        ],
        "summary": "Saves the transaction",
        "operationId": "Transaction_SaveClaimTransactionv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundsInstance",
            "in": "body",
            "description": "The funds instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Funds"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Options for specific transaction",
        "operationId": "Transaction_GetClaimTransactionOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The Transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets the transactions list.",
        "operationId": "Transaction_GetClaimantTransactionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Options for the transaction list",
        "operationId": "Transaction_GetClaimantTransactionsOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim Identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/reserves/{reserveId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets a specific transaction.",
        "operationId": "Transaction_GetClaimTransactionByReservev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveId",
            "in": "path",
            "description": "Reserve identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Option method for specific transaction",
        "operationId": "Transaction_GetClaimTransactionByReserveOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveId",
            "in": "path",
            "description": "The Reserve identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The Transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets a specific transaction.",
        "operationId": "Transaction_GetClaimantTransactionv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transaction"
        ],
        "summary": "Saves the transaction",
        "operationId": "Transaction_SaveClaimantTransactionv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundsInstance",
            "in": "body",
            "description": "The funds instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Funds"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Options for specific transaction",
        "operationId": "Transaction_GetClaimantTransactionOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The Transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/reserves/{reserveId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets a specific transaction.",
        "operationId": "Transaction_GetClaimantTransactionByReservev2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveId",
            "in": "path",
            "description": "Reserve identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Option method for specific transaction",
        "operationId": "Transaction_GetClaimantTransactionByReserveOptionsv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "The Claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveId",
            "in": "path",
            "description": "The Reserve identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The Transaction identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/reserves/{reserveId}/transactions": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Creates new transaction",
        "operationId": "Transaction_CreateClaimTransactionv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundsInstance",
            "in": "body",
            "description": "The funds instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Funds"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reserveId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets the transactions list.",
        "operationId": "Transaction_ClaimTransactionsOptionv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveId",
            "in": "path",
            "description": "The Reserve identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v2/claims/{claimId}/claimants/{claimantRowId}/reserves/{reserveId}/transactions": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Creates new transaction",
        "operationId": "Transaction_CreateClaimantTransactionv2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fundsInstance",
            "in": "body",
            "description": "The funds instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Funds"
            }
          },
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reserveId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "Transaction"
        ],
        "summary": "Gets the transactions list.",
        "operationId": "Transaction_ClaimantTransactionsOptionv2",
        "consumes": [
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "API authorization key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "claimId",
            "in": "path",
            "description": "The Claim identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "claimantRowId",
            "in": "path",
            "description": "Claimant identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reserveId",
            "in": "path",
            "description": "The Reserve identifier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Attachments": {
      "type": "object",
      "properties": {
        "routeValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "state": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "getRestrictions": {
          "$ref": "#/definitions/Restrictions"
        },
        "additionalParams": {
          "$ref": "#/definitions/AttachmentAdditionalParams"
        },
        "reloadTime": {
          "type": "string"
        },
        "isFolder": {
          "type": "boolean"
        },
        "document_id": {
          "format": "int64",
          "type": "integer"
        },
        "create_Date": {
          "type": "string"
        },
        "document_Name": {
          "type": "string"
        },
        "document_Filename": {
          "type": "string"
        },
        "document_subject": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "iDocument_type": {
          "format": "int32",
          "type": "integer"
        },
        "document_type_shortCode": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "user_ID": {
          "type": "string"
        },
        "document_filepath": {
          "type": "string"
        },
        "folder_Id": {
          "format": "int32",
          "type": "integer"
        },
        "keywords": {
          "type": "string"
        },
        "document_Class": {
          "type": "string"
        },
        "iDocument_Class": {
          "format": "int32",
          "type": "integer"
        },
        "document_class_shortCode": {
          "type": "string"
        },
        "document_Category": {
          "type": "string"
        },
        "iDocument_Category": {
          "format": "int32",
          "type": "integer"
        },
        "document_category_shortCode": {
          "type": "string"
        },
        "doc_Internal_Type": {
          "type": "string"
        },
        "upload_Status": {
          "format": "int32",
          "type": "integer"
        },
        "attachTable": {
          "type": "string"
        },
        "attachRecordId": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "filesize": {
          "type": "string"
        },
        "docAttachflag": {
          "type": "boolean"
        },
        "viewTemplates": {
          "type": "boolean"
        },
        "attachTableName": {
          "type": "string"
        },
        "claimID": {
          "type": "string"
        },
        "claimantID": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string"
        },
        "fileDescription": {
          "type": "string"
        },
        "document_Pages": {
          "type": "string"
        },
        "eventNumber": {
          "type": "string"
        },
        "eventID": {
          "type": "string"
        },
        "lob": {
          "type": "string"
        },
        "newRecord": {
          "type": "string"
        },
        "isFileUpload": {
          "type": "boolean"
        },
        "folderIds": {
          "type": "string"
        },
        "documentIds": {
          "type": "string"
        },
        "psid": {
          "type": "string"
        },
        "screenFlag": {
          "type": "string"
        },
        "objClaimList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimInfoList"
          }
        },
        "policyID": {
          "type": "string"
        },
        "selectEvent": {
          "type": "boolean"
        },
        "formName": {
          "type": "string"
        },
        "folderName": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "recordId": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "folderId": {
          "type": "string"
        },
        "parentFolderId": {
          "type": "string"
        },
        "parentFolderName": {
          "type": "string"
        },
        "pageNumber": {
          "type": "string"
        },
        "regarding": {
          "type": "string"
        },
        "nonMCMFormName": {
          "type": "string"
        },
        "noteId": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "isFolder": {
          "type": "boolean"
        },
        "document_id": {
          "format": "int64",
          "type": "integer"
        },
        "create_Date": {
          "type": "string"
        },
        "document_Name": {
          "type": "string"
        },
        "document_Filename": {
          "type": "string"
        },
        "document_subject": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "iDocument_type": {
          "format": "int32",
          "type": "integer"
        },
        "document_type_shortCode": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "user_ID": {
          "type": "string"
        },
        "document_filepath": {
          "type": "string"
        },
        "folder_Id": {
          "format": "int32",
          "type": "integer"
        },
        "keywords": {
          "type": "string"
        },
        "document_Class": {
          "type": "string"
        },
        "iDocument_Class": {
          "format": "int32",
          "type": "integer"
        },
        "document_class_shortCode": {
          "type": "string"
        },
        "document_Category": {
          "type": "string"
        },
        "iDocument_Category": {
          "format": "int32",
          "type": "integer"
        },
        "document_category_shortCode": {
          "type": "string"
        },
        "doc_Internal_Type": {
          "type": "string"
        },
        "upload_Status": {
          "format": "int32",
          "type": "integer"
        },
        "attachTable": {
          "type": "string"
        },
        "attachRecordId": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "filesize": {
          "type": "string"
        },
        "docAttachflag": {
          "type": "boolean"
        },
        "viewTemplates": {
          "type": "boolean"
        },
        "attachTableName": {
          "type": "string"
        },
        "claimID": {
          "type": "string"
        },
        "claimantID": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string"
        },
        "fileDescription": {
          "type": "string"
        },
        "document_Pages": {
          "type": "string"
        },
        "eventNumber": {
          "type": "string"
        },
        "eventID": {
          "type": "string"
        },
        "lob": {
          "type": "string"
        },
        "newRecord": {
          "type": "string"
        },
        "isFileUpload": {
          "type": "boolean"
        },
        "objClaimList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimInfoList"
          }
        },
        "policyID": {
          "type": "string"
        },
        "selectEvent": {
          "type": "boolean"
        },
        "formName": {
          "type": "string"
        },
        "medicalManagementInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicalManagementInfo"
          }
        },
        "medicalManagementRowId": {
          "format": "int32",
          "type": "integer"
        },
        "empEid": {
          "format": "int32",
          "type": "integer"
        },
        "piRowId": {
          "format": "int32",
          "type": "integer"
        },
        "sysFormPForm": {
          "type": "string"
        }
      }
    },
    "Restrictions": {
      "type": "object",
      "properties": {
        "security": {
          "type": "object"
        },
        "utilities": {
          "type": "object"
        },
        "isAddAnnotationAllowed": {
          "type": "boolean"
        },
        "isEditAnnotationAllowed": {
          "type": "boolean"
        }
      }
    },
    "AttachmentAdditionalParams": {
      "type": "object",
      "properties": {
        "gridId": {
          "type": "string"
        },
        "searchCat": {
          "type": "string"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "fileUpload": {
          "type": "boolean"
        },
        "recordsPermissionWarning": {
          "type": "boolean"
        }
      }
    },
    "ClaimInfoList": {
      "type": "object",
      "properties": {
        "claimID": {
          "format": "int32",
          "type": "integer"
        },
        "claimNumber": {
          "type": "string"
        },
        "claimDate": {
          "type": "string"
        },
        "claimStatusDesc": {
          "type": "string"
        },
        "claimTypeCode": {
          "type": "string"
        },
        "lob": {
          "type": "string"
        },
        "claimantName": {
          "type": "string"
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "recordId": {
          "format": "int32",
          "type": "integer"
        },
        "schema": {
          "type": "object"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MedicalManagementInfo": {
      "type": "object",
      "properties": {
        "medicalManagementRowId": {
          "format": "int32",
          "type": "integer"
        },
        "employeeId": {
          "format": "int32",
          "type": "integer"
        },
        "encounterType": {
          "type": "string"
        },
        "encounterTypeCode": {
          "format": "int32",
          "type": "integer"
        },
        "encounterDate": {
          "type": "string"
        }
      }
    },
    "DocumentForm": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "folderId": {
          "type": "string"
        },
        "psId": {
          "format": "int32",
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "typeDesc": {
          "type": "string"
        },
        "classId": {
          "type": "string"
        },
        "classDesc": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "categoryDesc": {
          "type": "string"
        },
        "screenFlag": {
          "type": "string"
        },
        "noteId": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "attachTable": {
          "type": "string"
        },
        "attachRecordId": {
          "format": "int32",
          "type": "integer"
        },
        "documentAttachmentlst": {
          "type": "string"
        },
        "documentIdentifierList": {
          "type": "string"
        },
        "fileSizelst": {
          "type": "string"
        }
      }
    },
    "APIMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            -1
          ],
          "type": "integer"
        }
      }
    },
    "DocumentType": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "readonly": {
          "format": "int32",
          "type": "integer"
        },
        "pid": {
          "type": "string"
        },
        "view": {
          "format": "int32",
          "type": "integer"
        },
        "create": {
          "format": "int32",
          "type": "integer"
        },
        "edit": {
          "format": "int32",
          "type": "integer"
        },
        "delete": {
          "format": "int32",
          "type": "integer"
        },
        "transfer": {
          "format": "int32",
          "type": "integer"
        },
        "copy": {
          "format": "int32",
          "type": "integer"
        },
        "download": {
          "format": "int32",
          "type": "integer"
        },
        "move": {
          "format": "int32",
          "type": "integer"
        },
        "email": {
          "format": "int32",
          "type": "integer"
        },
        "folderId": {
          "type": "string"
        },
        "folderName": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "attachTable": {
          "type": "string"
        },
        "docInternalType": {
          "type": "string"
        },
        "attachRecordId": {
          "format": "int32",
          "type": "integer"
        },
        "documentId": {
          "format": "int32",
          "type": "integer"
        },
        "screenFlag": {
          "type": "string"
        },
        "formName": {
          "type": "string"
        },
        "psId": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/CodeType"
        },
        "documentsType": {
          "type": "string"
        },
        "documentClass": {
          "type": "string"
        },
        "class": {
          "$ref": "#/definitions/CodeType"
        },
        "documentCategory": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/CodeType"
        },
        "keywords": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "noteId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "upload_Status": {
          "format": "int32",
          "type": "integer"
        },
        "fileSize": {
          "format": "int64",
          "type": "integer"
        },
        "fileSizeInMB": {
          "format": "double",
          "type": "number"
        },
        "fileContents": {
          "format": "byte",
          "type": "string"
        },
        "useOutlookToEmail": {
          "type": "boolean"
        },
        "sizeLimitOutlook": {
          "format": "int32",
          "type": "integer"
        },
        "isAtPaperVision": {
          "type": "string"
        },
        "paperVisionUrl": {
          "type": "string"
        },
        "claimnumber": {
          "type": "string"
        },
        "eventnumber": {
          "type": "string"
        },
        "bMobileAdj": {
          "type": "boolean"
        },
        "bMobilityAdj": {
          "type": "boolean"
        },
        "claimId": {
          "format": "int32",
          "type": "integer"
        },
        "eventId": {
          "format": "int32",
          "type": "integer"
        },
        "bIRUploadStatus": {
          "type": "boolean"
        },
        "base64EncodedFileContents": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "useSilverlight": {
          "type": "boolean"
        },
        "time": {
          "type": "string"
        },
        "docAttachflag": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "baseUrl": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        }
      }
    },
    "CodeType": {
      "type": "object",
      "properties": {
        "shortCode": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "relatedCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "parentCode": {
          "type": "string"
        },
        "parentDesc": {
          "type": "string"
        },
        "parentText": {
          "type": "string"
        },
        "resstatus": {
          "type": "string"
        },
        "covgSeqNum": {
          "type": "string"
        },
        "transSeqNum": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "coverageKey": {
          "type": "string"
        },
        "erRowID": {
          "format": "int32",
          "type": "integer"
        },
        "id1": {
          "type": "string"
        },
        "id2": {
          "type": "string"
        },
        "code1": {
          "type": "string"
        },
        "desc1": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "rate_Formatted": {
          "type": "string"
        },
        "codedesc": {
          "type": "string"
        }
      }
    },
    "DocumentsDeleteRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        },
        "folderIds": {
          "type": "string"
        },
        "documentIds": {
          "type": "string"
        },
        "psid": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "screenFlag": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "baseUrl": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "canRead": {
          "type": "boolean",
          "readOnly": true
        },
        "canSeek": {
          "type": "boolean",
          "readOnly": true
        },
        "canTimeout": {
          "type": "boolean",
          "readOnly": true
        },
        "canWrite": {
          "type": "boolean",
          "readOnly": true
        },
        "length": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "position": {
          "format": "int64",
          "type": "integer"
        },
        "readTimeout": {
          "format": "int32",
          "type": "integer"
        },
        "writeTimeout": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ImageInfo": {
      "type": "object",
      "properties": {
        "imageUrl": {
          "type": "string"
        },
        "imagecontentMessage": {
          "type": "string"
        },
        "pageNmber": {
          "format": "int32",
          "type": "integer"
        },
        "htmlContent": {
          "type": "string"
        }
      }
    },
    "AttachmentsForElasticSearch": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string"
        },
        "recordId": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "documentFileName": {
          "type": "string"
        },
        "searchable": {
          "type": "string"
        },
        "indexed": {
          "type": "string"
        },
        "documentName": {
          "type": "string"
        },
        "confRecUserids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confFlag": {
          "type": "boolean"
        },
        "besGroupIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "documentSubject": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        }
      }
    },
    "FolderNew": {
      "type": "object",
      "properties": {
        "folderId": {
          "format": "int32",
          "type": "integer"
        },
        "parentId": {
          "format": "int64",
          "type": "integer"
        },
        "folderName": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FolderNew"
          }
        }
      }
    },
    "TransferDocumentsRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        },
        "psid": {
          "type": "string"
        },
        "documentIds": {
          "type": "string"
        },
        "userLoginNames": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "screenFlag": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "baseUrl": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        }
      }
    },
    "MoveDocumentsRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        },
        "newFolderId": {
          "type": "string"
        },
        "documents": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "baseUrl": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        }
      }
    },
    "EmailDocumentsRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        },
        "userEmailIds": {
          "type": "string"
        },
        "otherEmailIds": {
          "type": "string"
        },
        "documents": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "psid": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "baseUrl": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        }
      }
    },
    "FolderTypeRequest": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "recordId": {
          "format": "int32",
          "type": "integer"
        },
        "tableName": {
          "type": "string"
        },
        "folderID": {
          "type": "string"
        },
        "folderName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "baseUrl": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        },
        "clientToken": {
          "type": "string"
        }
      }
    },
    "Claimant": {
      "type": "object",
      "properties": {
        "claimantRowId": {
          "format": "int32",
          "type": "integer"
        },
        "claimId": {
          "format": "int32",
          "type": "integer"
        },
        "claimantEid": {
          "$ref": "#/definitions/Lookups"
        },
        "claimantTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "attorneyEid": {
          "$ref": "#/definitions/Lookups"
        },
        "primaryClmntFlag": {
          "type": "boolean"
        },
        "injuryDescription": {
          "type": "string"
        },
        "damageDescription": {
          "type": "string"
        },
        "solDate": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "claimAmount": {
          "format": "double",
          "type": "number"
        },
        "insurerEid": {
          "$ref": "#/definitions/Lookups"
        },
        "claimantNumber": {
          "format": "int32",
          "type": "integer"
        },
        "htmlComments": {
          "type": "string"
        },
        "adjusterEId": {
          "$ref": "#/definitions/Lookups"
        },
        "claimantStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "claimantEntity": {
          "$ref": "#/definitions/Entity"
        },
        "attorneyEntity": {
          "$ref": "#/definitions/Entity"
        },
        "physicians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lookups"
          }
        },
        "hospitals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lookups"
          }
        },
        "disabilityCode": {
          "$ref": "#/definitions/Codes"
        },
        "dateOfDeath": {
          "type": "string"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "Lookups": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "desc": {
          "type": "string"
        }
      }
    },
    "Codes": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "shortCode": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "codeTable": {
          "type": "string"
        },
        "relatedShortCode": {
          "type": "string"
        }
      }
    },
    "Entity": {
      "type": "object",
      "properties": {
        "businessTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "county": {
          "type": "string"
        },
        "natureOfBusiness": {
          "type": "string"
        },
        "sicCode": {
          "$ref": "#/definitions/Codes"
        },
        "sicCodeDesc": {
          "type": "string"
        },
        "wcFillingNumber": {
          "type": "string"
        },
        "entityId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "alsoKnownAs": {
          "type": "string"
        },
        "abbreviation": {
          "type": "string"
        },
        "costCenterCode": {
          "$ref": "#/definitions/Codes"
        },
        "addr1": {
          "type": "string"
        },
        "addr2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "$ref": "#/definitions/Codes"
        },
        "stateId": {
          "$ref": "#/definitions/Codes"
        },
        "zipCode": {
          "type": "string"
        },
        "parentEid": {
          "$ref": "#/definitions/Lookups"
        },
        "taxId": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "emailTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "emailAddress": {
          "type": "string"
        },
        "sexCode": {
          "$ref": "#/definitions/Codes"
        },
        "birthDate": {
          "type": "string"
        },
        "phone1": {
          "type": "string"
        },
        "phone2": {
          "type": "string"
        },
        "faxNumber": {
          "type": "string"
        },
        "effStartDate": {
          "type": "string"
        },
        "effEndDate": {
          "type": "string"
        },
        "parent1099EID": {
          "$ref": "#/definitions/Lookups"
        },
        "entity1099Reportable": {
          "type": "boolean"
        },
        "middleName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "naicsCode": {
          "$ref": "#/definitions/Codes"
        },
        "freezePayments": {
          "type": "boolean"
        },
        "organizationType": {
          "$ref": "#/definitions/Codes"
        },
        "npiNumber": {
          "type": "string"
        },
        "timeZoneCode": {
          "$ref": "#/definitions/Codes"
        },
        "prefix": {
          "$ref": "#/definitions/Codes"
        },
        "suffixCommon": {
          "$ref": "#/definitions/Codes"
        },
        "suffixLegal": {
          "type": "string"
        },
        "legalName": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "legacyUniqueIdentifier": {
          "type": "string"
        },
        "effectiveDate": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "adjusterEId": {
          "$ref": "#/definitions/Lookups"
        },
        "idType": {
          "format": "int32",
          "type": "integer"
        },
        "lastName": {
          "type": "string"
        },
        "addr3": {
          "type": "string"
        },
        "addr4": {
          "type": "string"
        },
        "deletedFlag": {
          "type": "boolean"
        },
        "triggerDateField": {
          "type": "string"
        },
        "overrideOfacCheck": {
          "type": "boolean"
        },
        "rmUserId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserLookup"
          }
        },
        "timeZoneTracking": {
          "type": "boolean"
        },
        "emailPassword": {
          "type": "string"
        },
        "hbrFeeLines": {
          "format": "int32",
          "type": "integer"
        },
        "hbrAmt": {
          "format": "double",
          "type": "number"
        },
        "mbrFeeLines": {
          "format": "int32",
          "type": "integer"
        },
        "mbrAmt": {
          "format": "double",
          "type": "number"
        },
        "mmseatinEditFlag": {
          "type": "boolean"
        },
        "autoDiscFlg": {
          "type": "boolean"
        },
        "autoDiscount": {
          "format": "double",
          "type": "number"
        },
        "htmlComments": {
          "type": "string"
        },
        "rejectReasonText": {
          "type": "string"
        },
        "rejectReasonText_HTMLComments": {
          "type": "string"
        },
        "entityApprovalStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "currencyType": {
          "$ref": "#/definitions/Codes"
        },
        "clientSequenceNumber": {
          "type": "string"
        },
        "nameType": {
          "$ref": "#/definitions/Codes"
        },
        "ncciCarrierCode": {
          "type": "string"
        },
        "dunsNumber": {
          "type": "string"
        },
        "ausTetraNumber": {
          "type": "string"
        },
        "experianBIN": {
          "type": "string"
        },
        "hasAcceptedBankinginfo": {
          "type": "boolean"
        },
        "combinedPayment": {
          "$ref": "#/definitions/CombinedPayment"
        },
        "instructions": {
          "$ref": "#/definitions/EntInstructions"
        },
        "useEntityRole": {
          "type": "boolean"
        },
        "deceased": {
          "type": "boolean"
        },
        "gstNumber": {
          "type": "string"
        },
        "gstStatus": {
          "$ref": "#/definitions/Codes"
        },
        "gstRegistered": {
          "type": "boolean"
        },
        "addressDBSearchString": {
          "type": "string"
        },
        "addressVerifiedFlag": {
          "type": "boolean"
        },
        "addressId": {
          "format": "int32",
          "type": "integer"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "LinkObject": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        }
      }
    },
    "SupplementalField": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            25,
            31,
            35,
            36,
            40,
            41
          ],
          "type": "integer"
        },
        "value": {
          "type": "object"
        },
        "values": {
          "type": "object"
        },
        "htmlContents": {
          "type": "string"
        }
      }
    },
    "HalOptions": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "properties": {
          "type": "object"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "UserLookup": {
      "type": "object",
      "properties": {
        "groupID": {
          "format": "int32",
          "type": "integer"
        },
        "userID": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "CombinedPayment": {
      "type": "object",
      "properties": {
        "combPayRowId": {
          "format": "int32",
          "type": "integer"
        },
        "entityId": {
          "$ref": "#/definitions/Lookups"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "addr1": {
          "type": "string"
        },
        "addr2": {
          "type": "string"
        },
        "addr3": {
          "type": "string"
        },
        "addr4": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "stateId": {
          "$ref": "#/definitions/Codes"
        },
        "zipCode": {
          "type": "string"
        },
        "countryCode": {
          "$ref": "#/definitions/Codes"
        },
        "taxId": {
          "type": "string"
        },
        "accountId": {
          "format": "int32",
          "type": "integer"
        },
        "subAccId": {
          "format": "int32",
          "type": "integer"
        },
        "paymentInterval": {
          "$ref": "#/definitions/Codes"
        },
        "startingOnDate": {
          "type": "string"
        },
        "nextSchDate": {
          "type": "string"
        },
        "nextPrintOverride": {
          "type": "string"
        },
        "nextSchPrintDate": {
          "type": "string"
        },
        "lastDayflag": {
          "type": "boolean"
        },
        "stopDate": {
          "type": "string"
        },
        "stopFlag": {
          "type": "boolean"
        },
        "combPmtCurrencyType": {
          "$ref": "#/definitions/Codes"
        },
        "adjustPrintDatesFlag": {
          "type": "boolean"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "EntInstructions": {
      "type": "object",
      "properties": {
        "entityId": {
          "format": "int32",
          "type": "integer"
        },
        "entInstrText": {
          "type": "string"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "Claim": {
      "type": "object",
      "properties": {
        "primaryPiEmployee": {
          "$ref": "#/definitions/PiEmployee"
        },
        "unitStat": {
          "$ref": "#/definitions/UnitStat"
        },
        "propRowId": {
          "$ref": "#/definitions/Lookups"
        },
        "claimId": {
          "format": "int32",
          "type": "integer"
        },
        "eventId": {
          "format": "int32",
          "type": "integer"
        },
        "eventNumber": {
          "type": "string"
        },
        "claimNumber": {
          "type": "string"
        },
        "claimStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "lineOfBusCode": {
          "$ref": "#/definitions/Codes"
        },
        "claimReviewCode": {
          "$ref": "#/definitions/Codes"
        },
        "openFlag": {
          "type": "boolean"
        },
        "claimTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "dttmClosed": {
          "type": "string"
        },
        "dateOfClaim": {
          "type": "string"
        },
        "spouseDod": {
          "type": "string"
        },
        "dateOfDeath": {
          "type": "string"
        },
        "timeOfClaim": {
          "type": "string"
        },
        "fileNumber": {
          "type": "string"
        },
        "beneficiaryName": {
          "type": "string"
        },
        "additionalPolicies": {
          "type": "string"
        },
        "spouseName": {
          "type": "string"
        },
        "deceasedChildren": {
          "type": "string"
        },
        "notificationComments": {
          "type": "string"
        },
        "methodClosedCode": {
          "$ref": "#/definitions/Codes"
        },
        "paymntFrozenFlag": {
          "type": "boolean"
        },
        "leaveOnlyFlag": {
          "type": "boolean"
        },
        "lssClaimInd": {
          "type": "boolean"
        },
        "vssClaimInd": {
          "type": "boolean"
        },
        "emailAddresses": {
          "type": "string"
        },
        "mailSent": {
          "type": "string"
        },
        "submitToISOFlag": {
          "type": "string"
        },
        "currencyType": {
          "$ref": "#/definitions/Codes"
        },
        "policyLOBCode": {
          "$ref": "#/definitions/Codes"
        },
        "processingSiteCode": {
          "$ref": "#/definitions/Codes"
        },
        "mannerOfDeath": {
          "$ref": "#/definitions/Codes"
        },
        "countryOfDeathCode": {
          "$ref": "#/definitions/Codes"
        },
        "specialEventCode": {
          "$ref": "#/definitions/Codes"
        },
        "notificationMethodCode": {
          "$ref": "#/definitions/Codes"
        },
        "deceasedMaritalStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "spouseLivingCode": {
          "$ref": "#/definitions/Codes"
        },
        "estateProbatedCode": {
          "$ref": "#/definitions/Codes"
        },
        "primaryPolicyId": {
          "$ref": "#/definitions/Lookups"
        },
        "primaryPolicyIdEnh": {
          "$ref": "#/definitions/Lookups"
        },
        "serviceCode": {
          "$ref": "#/definitions/Codes"
        },
        "accidentDescCode": {
          "$ref": "#/definitions/Codes"
        },
        "accidentTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "dateFddotRpt": {
          "type": "string"
        },
        "dateStdotRpt": {
          "type": "string"
        },
        "inTrafficFlag": {
          "type": "boolean"
        },
        "policeAgencyEid": {
          "$ref": "#/definitions/Lookups"
        },
        "preventableFlag": {
          "type": "boolean"
        },
        "reportableFlag": {
          "type": "boolean"
        },
        "stDotRptId": {
          "type": "string"
        },
        "estCollection": {
          "format": "double",
          "type": "number"
        },
        "claimGrossAmount": {
          "format": "double",
          "type": "number"
        },
        "claimNetAmount": {
          "format": "double",
          "type": "number"
        },
        "claimRemainingBalance": {
          "format": "double",
          "type": "number"
        },
        "dateRptdToRm": {
          "type": "string"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "filingStateId": {
          "$ref": "#/definitions/Codes"
        },
        "mcoEid": {
          "$ref": "#/definitions/Lookups"
        },
        "rateTableId": {
          "format": "int32",
          "type": "integer"
        },
        "planId": {
          "$ref": "#/definitions/Lookups"
        },
        "classRowId": {
          "format": "int32",
          "type": "integer"
        },
        "disabilFromDate": {
          "type": "string"
        },
        "disabilToDate": {
          "type": "string"
        },
        "benefitsStart": {
          "type": "string"
        },
        "benefitsThrough": {
          "type": "string"
        },
        "disTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "benCalcPayStart": {
          "type": "string"
        },
        "benCalcPayTo": {
          "type": "string"
        },
        "taxFlags": {
          "format": "int32",
          "type": "integer"
        },
        "pensionAmt": {
          "format": "double",
          "type": "number"
        },
        "ssAmt": {
          "format": "double",
          "type": "number"
        },
        "compRate": {
          "format": "double",
          "type": "number"
        },
        "otherAmt": {
          "format": "double",
          "type": "number"
        },
        "otherOffset1": {
          "format": "double",
          "type": "number"
        },
        "otherOffset2": {
          "format": "double",
          "type": "number"
        },
        "otherOffset3": {
          "format": "double",
          "type": "number"
        },
        "postTaxDed1": {
          "format": "double",
          "type": "number"
        },
        "postTaxDed2": {
          "format": "double",
          "type": "number"
        },
        "aiaCode12": {
          "$ref": "#/definitions/Codes"
        },
        "aiaCode34": {
          "$ref": "#/definitions/Codes"
        },
        "aiaCode56": {
          "$ref": "#/definitions/Codes"
        },
        "spHandlingFlag": {
          "type": "boolean"
        },
        "selfInsuredFlag": {
          "type": "boolean"
        },
        "dateOfDiscovery": {
          "type": "string"
        },
        "reportNumber": {
          "type": "string"
        },
        "adjustPrintDatesFlag": {
          "type": "boolean"
        },
        "catastropheCode": {
          "$ref": "#/definitions/Codes"
        },
        "catastropheRowId": {
          "format": "int32",
          "type": "integer"
        },
        "catstropheDecisionFlag": {
          "format": "int32",
          "type": "integer"
        },
        "confRecFlag": {
          "type": "boolean"
        },
        "claimDescriptionCode": {
          "$ref": "#/definitions/Codes"
        },
        "lossDescription": {
          "type": "string"
        },
        "lossDescription_HTMLComments": {
          "type": "string"
        },
        "claimCategoryCode": {
          "$ref": "#/definitions/Codes"
        },
        "noticeDate": {
          "type": "string"
        },
        "errorDate": {
          "type": "string"
        },
        "underlyingLossDate": {
          "type": "string"
        },
        "insuredClaimDeptEid": {
          "$ref": "#/definitions/Codes"
        },
        "clueFaultInd": {
          "$ref": "#/definitions/Codes"
        },
        "clueLossofDispos": {
          "$ref": "#/definitions/Codes"
        },
        "clueReportingStatus": {
          "$ref": "#/definitions/Codes"
        },
        "clueRemovalReason": {
          "$ref": "#/definitions/Codes"
        },
        "acord": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "propertyClaim": {
          "$ref": "#/definitions/ClaimXProperty"
        },
        "docRetentionDate": {
          "type": "string"
        },
        "exclDeletionFlag": {
          "type": "boolean"
        },
        "beneficiaryKnownByCallerFlag": {
          "type": "boolean"
        },
        "poeClaimFlag": {
          "type": "boolean"
        },
        "minorInvolvedFlag": {
          "type": "boolean"
        },
        "highPriorityFlag": {
          "type": "boolean"
        },
        "jurisdictionals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "claimSupervisorId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserLookup"
          }
        },
        "customHierarchy": {
          "$ref": "#/definitions/Codes"
        },
        "informationReqDate": {
          "type": "string"
        },
        "proofofLossDate": {
          "type": "string"
        },
        "causeOfDeath": {
          "$ref": "#/definitions/Codes"
        },
        "channelCode": {
          "$ref": "#/definitions/Codes"
        },
        "fraudScore": {
          "format": "int32",
          "type": "integer"
        },
        "cluePolicyType": {
          "$ref": "#/definitions/Codes"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "PiEmployee": {
      "type": "object",
      "properties": {
        "diagnosisList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "diagnosisListicd10": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "injuryCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "bodyParts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "treatments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "physicians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lookups"
          }
        },
        "hospitals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lookups"
          }
        },
        "countyOfResidnc": {
          "type": "string"
        },
        "drivlicState": {
          "$ref": "#/definitions/Codes"
        },
        "estLenDisability": {
          "format": "int32",
          "type": "integer"
        },
        "hiredInSteFlag": {
          "type": "boolean"
        },
        "insurableFlag": {
          "type": "boolean"
        },
        "lastVerifiedDate": {
          "type": "string"
        },
        "numOfViolations": {
          "format": "int32",
          "type": "integer"
        },
        "oshaAccDesc": {
          "type": "string"
        },
        "oshaRecFlag": {
          "type": "boolean"
        },
        "regularJobFlag": {
          "type": "boolean"
        },
        "termDate": {
          "type": "string"
        },
        "workPermitDate": {
          "type": "string"
        },
        "workPermitNumber": {
          "type": "string"
        },
        "workdayStartTime": {
          "type": "string"
        },
        "piRowId": {
          "format": "int32",
          "type": "integer"
        },
        "piEid": {
          "$ref": "#/definitions/Lookups"
        },
        "eventId": {
          "format": "int32",
          "type": "integer"
        },
        "injuryIllnessFlg": {
          "format": "int32",
          "type": "integer"
        },
        "dateOfDeath": {
          "type": "string"
        },
        "rehabText": {
          "type": "string"
        },
        "descByWitness": {
          "type": "string"
        },
        "patientAcctNo": {
          "type": "string"
        },
        "medicalRcdNo": {
          "type": "string"
        },
        "insPlanGroupNo": {
          "type": "string"
        },
        "dateOfAdmission": {
          "type": "string"
        },
        "dateOfDischarge": {
          "type": "string"
        },
        "admSourceCode": {
          "$ref": "#/definitions/Codes"
        },
        "admissionReason": {
          "type": "string"
        },
        "acuityLevelCode": {
          "$ref": "#/definitions/Codes"
        },
        "patientStatCode": {
          "$ref": "#/definitions/Codes"
        },
        "patientCondCode": {
          "$ref": "#/definitions/Codes"
        },
        "dischargeDspCode": {
          "$ref": "#/definitions/Codes"
        },
        "expLengthOfStay": {
          "format": "int32",
          "type": "integer"
        },
        "qiSignifCode": {
          "$ref": "#/definitions/Codes"
        },
        "episodeOfCareId": {
          "type": "string"
        },
        "patientTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "maritalStatCode": {
          "$ref": "#/definitions/Codes"
        },
        "raceEnthCode": {
          "$ref": "#/definitions/Codes"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        },
        "primaryPayCode": {
          "$ref": "#/definitions/Codes"
        },
        "emergencyContact": {
          "type": "string"
        },
        "emergencyContNo": {
          "type": "string"
        },
        "patientRoomNo": {
          "type": "string"
        },
        "facilityUnitCode": {
          "$ref": "#/definitions/Codes"
        },
        "facilityDeptEid": {
          "$ref": "#/definitions/Codes"
        },
        "hcoIdNo": {
          "type": "string"
        },
        "hcoSiteIdNo": {
          "type": "string"
        },
        "whyAtFacility": {
          "type": "string"
        },
        "claimAmount": {
          "format": "double",
          "type": "number"
        },
        "lostWorkFlag": {
          "type": "boolean"
        },
        "lenOfSvcDays": {
          "format": "int32",
          "type": "integer"
        },
        "positionCode": {
          "$ref": "#/definitions/Codes"
        },
        "deptAssignedEid": {
          "$ref": "#/definitions/Codes"
        },
        "supervisorEid": {
          "$ref": "#/definitions/Lookups"
        },
        "exemptStatusFlag": {
          "type": "boolean"
        },
        "noOfExemptions": {
          "format": "int32",
          "type": "integer"
        },
        "fullTimeFlag": {
          "type": "boolean"
        },
        "hourlyRate": {
          "format": "double",
          "type": "number"
        },
        "weeklyHours": {
          "format": "double",
          "type": "number"
        },
        "workSunFlag": {
          "type": "boolean"
        },
        "workMonFlag": {
          "type": "boolean"
        },
        "workTueFlag": {
          "type": "boolean"
        },
        "workWedFlag": {
          "type": "boolean"
        },
        "workThuFlag": {
          "type": "boolean"
        },
        "workFriFlag": {
          "type": "boolean"
        },
        "workSatFlag": {
          "type": "boolean"
        },
        "driversLicNo": {
          "type": "string"
        },
        "driverslictypecode": {
          "$ref": "#/definitions/Codes"
        },
        "dateDriverslicexp": {
          "type": "string"
        },
        "ncciClassCode": {
          "$ref": "#/definitions/Codes"
        },
        "drivlicRstrctcode": {
          "$ref": "#/definitions/Codes"
        },
        "comments": {
          "type": "string"
        },
        "htmlComments": {
          "type": "string"
        },
        "injuryCatCode": {
          "$ref": "#/definitions/Codes"
        },
        "payAmount": {
          "format": "double",
          "type": "number"
        },
        "activeFlag": {
          "type": "boolean"
        },
        "employeeNumber": {
          "type": "string"
        },
        "dateHired": {
          "type": "string"
        },
        "disabilityCode": {
          "$ref": "#/definitions/Codes"
        },
        "illnessCode": {
          "$ref": "#/definitions/Codes"
        },
        "payTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "lostConscFlag": {
          "type": "boolean"
        },
        "patientId": {
          "format": "int32",
          "type": "integer"
        },
        "estRtwDate": {
          "type": "string"
        },
        "majorHandCode": {
          "$ref": "#/definitions/Codes"
        },
        "hrangeStartDate": {
          "type": "string"
        },
        "hrangeEndDate": {
          "type": "string"
        },
        "jobClassCode": {
          "$ref": "#/definitions/Codes"
        },
        "fein": {
          "type": "string"
        },
        "postWeeklyWage": {
          "format": "double",
          "type": "number"
        },
        "otherTreatments": {
          "type": "string"
        },
        "otherMedcond": {
          "type": "string"
        },
        "monthlyRate": {
          "format": "double",
          "type": "number"
        },
        "disabilityOption": {
          "$ref": "#/definitions/Codes"
        },
        "stdDisabilityType": {
          "$ref": "#/definitions/Codes"
        },
        "customFedTaxPer": {
          "format": "double",
          "type": "number"
        },
        "customSSTaxPer": {
          "format": "double",
          "type": "number"
        },
        "customMedTaxPer": {
          "format": "double",
          "type": "number"
        },
        "customSTTaxPer": {
          "format": "double",
          "type": "number"
        },
        "eligDisBenFlag": {
          "type": "boolean"
        },
        "whereInjuryTaken": {
          "type": "string"
        },
        "activityWhenInjured": {
          "type": "string"
        },
        "injuryInconsistentWithPoliceRPTFlag": {
          "type": "boolean"
        },
        "hospitalFlag": {
          "type": "boolean"
        },
        "catastrophicInjuryFlag": {
          "type": "boolean"
        },
        "medications": {
          "type": "string"
        },
        "fileClosingdate": {
          "type": "string"
        },
        "symptomsDesc": {
          "type": "string"
        },
        "prognosis": {
          "type": "string"
        },
        "impairment": {
          "type": "boolean"
        },
        "injuryCauseCode": {
          "$ref": "#/definitions/Codes"
        },
        "preExistingCondition": {
          "$ref": "#/definitions/Codes"
        },
        "weeklyRate": {
          "format": "double",
          "type": "number"
        },
        "dailyRate": {
          "format": "double",
          "type": "number"
        },
        "dailyHours": {
          "format": "double",
          "type": "number"
        },
        "collateralOffset": {
          "format": "double",
          "type": "number"
        },
        "collateralSources": {
          "$ref": "#/definitions/Codes"
        },
        "disabilFromDate": {
          "type": "string"
        },
        "disabilToDate": {
          "type": "string"
        },
        "grossEarnings": {
          "format": "double",
          "type": "number"
        },
        "clueSubjIdentifier": {
          "$ref": "#/definitions/Codes"
        },
        "clueSubjRemovalIdentifier": {
          "$ref": "#/definitions/Codes"
        },
        "natureOfInjury": {
          "$ref": "#/definitions/Codes"
        },
        "dutyStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "employmentTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "extentOfIncapacityCode": {
          "$ref": "#/definitions/Codes"
        },
        "medCertRcdDate": {
          "type": "string"
        },
        "diagnosisListVCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "salaryCurrency": {
          "$ref": "#/definitions/Codes"
        },
        "employementCountry": {
          "$ref": "#/definitions/Codes"
        },
        "thresholdClaimed": {
          "type": "boolean"
        },
        "resident": {
          "type": "boolean"
        },
        "medicalExemption": {
          "$ref": "#/definitions/Codes"
        },
        "helpSSLApplicable": {
          "type": "boolean"
        },
        "sfssApplicable": {
          "type": "boolean"
        },
        "employerContrSupFunds": {
          "type": "boolean"
        },
        "medicalConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "driverRowId": {
          "format": "int32",
          "type": "integer"
        },
        "piTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "disOptionCode": {
          "$ref": "#/definitions/Codes"
        },
        "policyUnitRowId": {
          "format": "int32",
          "type": "integer"
        },
        "staffPosCode": {
          "format": "int32",
          "type": "integer"
        },
        "roleTableId": {
          "format": "int32",
          "type": "integer"
        },
        "parentTableName": {
          "type": "string"
        },
        "parentRowId": {
          "format": "int32",
          "type": "integer"
        },
        "piEntity": {
          "$ref": "#/definitions/Entity"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "UnitStat": {
      "type": "object",
      "properties": {
        "unitStatRowId": {
          "format": "int32",
          "type": "integer"
        },
        "claimId": {
          "format": "int32",
          "type": "integer"
        },
        "fraudClaimInd": {
          "$ref": "#/definitions/Codes"
        },
        "settlementMethod": {
          "$ref": "#/definitions/Codes"
        },
        "reserveTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "mgndCareOrgTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "dciValLvlCode": {
          "$ref": "#/definitions/Codes"
        },
        "ncciLossTypeLossCode": {
          "$ref": "#/definitions/Codes"
        },
        "ncciLossTypeRecovCode": {
          "$ref": "#/definitions/Codes"
        },
        "impairmentPercentCode": {
          "$ref": "#/definitions/Codes"
        },
        "medExtinguishInd": {
          "type": "boolean"
        },
        "returnToWorkInd": {
          "type": "boolean"
        },
        "lossEventClmInd": {
          "type": "boolean"
        },
        "annuityPurchAmt": {
          "format": "double",
          "type": "number"
        },
        "totGrossIncurred": {
          "format": "double",
          "type": "number"
        },
        "catastropheNBR": {
          "type": "string"
        },
        "dateAttyFormRecvd": {
          "type": "string"
        },
        "attyAuthRep": {
          "type": "boolean"
        },
        "disputedCaseFlag": {
          "type": "boolean"
        },
        "lumpSumInd": {
          "type": "boolean"
        },
        "prevWCFlag": {
          "type": "boolean"
        },
        "prevWCDate": {
          "type": "string"
        },
        "prevWCDesc": {
          "type": "string"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "ClaimXProperty": {
      "type": "object",
      "properties": {
        "propRowID": {
          "format": "int32",
          "type": "integer"
        },
        "propertyID": {
          "$ref": "#/definitions/Lookups"
        },
        "pin": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "addr1": {
          "type": "string"
        },
        "addr2": {
          "type": "string"
        },
        "addr3": {
          "type": "string"
        },
        "addr4": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "stateId": {
          "$ref": "#/definitions/Codes"
        },
        "zipCode": {
          "type": "string"
        },
        "classOfConstruction": {
          "$ref": "#/definitions/Codes"
        },
        "yearOfConstruction": {
          "format": "int32",
          "type": "integer"
        },
        "wallConstructionCode": {
          "$ref": "#/definitions/Codes"
        },
        "roofConstructionCode": {
          "$ref": "#/definitions/Codes"
        },
        "squareFootage": {
          "format": "double",
          "type": "number"
        },
        "noOfStories": {
          "format": "int32",
          "type": "integer"
        },
        "avgStoryHeight": {
          "format": "double",
          "type": "number"
        },
        "heatingSysCode": {
          "$ref": "#/definitions/Codes"
        },
        "coolingSysCode": {
          "$ref": "#/definitions/Codes"
        },
        "fireAlarmCode": {
          "$ref": "#/definitions/Codes"
        },
        "sprinklersCode": {
          "$ref": "#/definitions/Codes"
        },
        "entryAlarmCode": {
          "$ref": "#/definitions/Codes"
        },
        "plotPlansCode": {
          "$ref": "#/definitions/Codes"
        },
        "floodZoneCertCode": {
          "$ref": "#/definitions/Codes"
        },
        "earthquakeZoneCode": {
          "$ref": "#/definitions/Codes"
        },
        "gpsLatitude": {
          "format": "double",
          "type": "number"
        },
        "gpsLongitude": {
          "format": "double",
          "type": "number"
        },
        "gpsAltitude": {
          "format": "double",
          "type": "number"
        },
        "roofAnchoringCode": {
          "$ref": "#/definitions/Codes"
        },
        "glassStrengthCode": {
          "$ref": "#/definitions/Codes"
        },
        "appraisedValue": {
          "format": "double",
          "type": "number"
        },
        "replacementValue": {
          "format": "double",
          "type": "number"
        },
        "territoryCode": {
          "$ref": "#/definitions/Codes"
        },
        "appraisedDate": {
          "type": "string"
        },
        "landValue": {
          "format": "double",
          "type": "number"
        },
        "appraisalSourceCode": {
          "$ref": "#/definitions/Codes"
        },
        "categoryCode": {
          "$ref": "#/definitions/Codes"
        },
        "dttmRcdAdded": {
          "type": "string"
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "addedByUser": {
          "type": "string"
        },
        "updatedByUser": {
          "type": "string"
        },
        "countryCode": {
          "$ref": "#/definitions/Codes"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "ResultViewList": {
      "type": "object",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "GetDiaryList": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "list": {
          "type": "object"
        },
        "getRestrictions": {
          "type": "object"
        },
        "additionalParams": {
          "$ref": "#/definitions/AdditionalParams"
        },
        "priority_text": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "isBESEnabled": {
          "type": "boolean"
        },
        "dateFormat": {
          "type": "string"
        }
      }
    },
    "AdditionalParams": {
      "type": "object",
      "properties": {
        "gridId": {
          "type": "string"
        },
        "searchCat": {
          "type": "string"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "userPref": {
          "$ref": "#/definitions/UserPrefParams"
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "rowHeight": {
          "format": "int32",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        },
        "currentPageNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserPrefParams": {
      "type": "object",
      "properties": {
        "claimantLength": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "opendiaries": {
          "type": "string"
        },
        "datedue": {
          "type": "string"
        },
        "diarysource": {
          "type": "string"
        },
        "currentsystemdate": {
          "type": "string"
        },
        "attach_table": {
          "type": "string"
        },
        "attach_recordid": {
          "type": "string"
        },
        "atT_PARENT_CODE": {
          "type": "string"
        },
        "sortexpression": {
          "type": "string"
        },
        "orderby": {
          "type": "string"
        },
        "showallclaimdiaries": {
          "type": "string"
        },
        "showalldiariesforactiverecord": {
          "type": "string"
        },
        "showAllDiariesRelatedToThisClaim": {
          "type": "string"
        },
        "shownotes": {
          "type": "string"
        },
        "allowactionsonothersdiariesperm": {
          "type": "string"
        },
        "alloweditothersdiarymanagerapproval": {
          "type": "string"
        },
        "loggedinusergroup": {
          "type": "string"
        },
        "loggedinuser": {
          "type": "string"
        },
        "showregarding": {
          "type": "string"
        },
        "userSortOrder": {
          "type": "string"
        },
        "sortExpression": {
          "type": "string"
        },
        "assignedUser": {
          "type": "string"
        },
        "assigningUser": {
          "type": "string"
        },
        "showActiveDiaryChecked": {
          "type": "string"
        },
        "showCActiveDiaryChecked": {
          "type": "string"
        },
        "alloweditothersdiarymanagerpermission": {
          "type": "string"
        },
        "assigned_user_mgr": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "priority_text": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        }
      }
    },
    "WpaDiaryEntry": {
      "type": "object",
      "properties": {
        "legacyUniqueIdentifier": {
          "type": "string"
        },
        "attFormCode": {
          "format": "int32",
          "type": "integer"
        },
        "attFormScrty": {
          "format": "int32",
          "type": "integer"
        },
        "attParentCode": {
          "format": "int32",
          "type": "integer"
        },
        "attSecRecId": {
          "format": "int32",
          "type": "integer"
        },
        "autoId": {
          "format": "int32",
          "type": "integer"
        },
        "diaryDeleted": {
          "type": "boolean"
        },
        "diaryVoid": {
          "type": "boolean"
        },
        "estimateTime": {
          "format": "double",
          "type": "number"
        },
        "notifyFlag": {
          "type": "boolean"
        },
        "routeFlag": {
          "type": "boolean"
        },
        "entryId": {
          "format": "int32",
          "type": "integer"
        },
        "entryName": {
          "type": "string"
        },
        "entryNotes": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "completeTime": {
          "type": "string"
        },
        "completeDate": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "statusOpen": {
          "type": "boolean"
        },
        "autoConfirm": {
          "type": "boolean"
        },
        "responseDate": {
          "type": "string"
        },
        "response": {
          "type": "string"
        },
        "assignedUser": {
          "type": "string"
        },
        "assigningUser": {
          "type": "string"
        },
        "assignedGroup": {
          "type": "string"
        },
        "isAttached": {
          "type": "boolean"
        },
        "attachTable": {
          "type": "string"
        },
        "attachRecordid": {
          "format": "int32",
          "type": "integer"
        },
        "regarding": {
          "type": "string"
        },
        "teTracked": {
          "type": "boolean"
        },
        "teStartTime": {
          "type": "string"
        },
        "teEndTime": {
          "type": "string"
        },
        "teTotalHours": {
          "format": "double",
          "type": "number"
        },
        "teExpenses": {
          "format": "double",
          "type": "number"
        },
        "completedByUser": {
          "type": "string"
        },
        "autoLateNotify": {
          "type": "boolean"
        },
        "nonRouteFlag": {
          "type": "boolean"
        },
        "nonRollFlag": {
          "type": "boolean"
        },
        "calledBy": {
          "type": "string"
        },
        "issuePeriod": {
          "format": "int32",
          "type": "integer"
        },
        "issueTillDays": {
          "format": "int32",
          "type": "integer"
        },
        "activityList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailNotifyFlag": {
          "type": "string"
        },
        "addedByUser": {
          "type": "string"
        },
        "updatedByUser": {
          "type": "string"
        },
        "dttmRcdAdded": {
          "type": "string"
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "diarystatus": {
          "format": "int32",
          "type": "integer"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "eventId": {
          "format": "int32",
          "type": "integer"
        },
        "countyOfInjury": {
          "type": "string"
        },
        "eventNumber": {
          "type": "string"
        },
        "eventTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "eventStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "eventIndCode": {
          "$ref": "#/definitions/Codes"
        },
        "eventDescription": {
          "type": "string"
        },
        "briefDesc": {
          "type": "string"
        },
        "deptEid": {
          "$ref": "#/definitions/Codes"
        },
        "deptInvolvedEid": {
          "$ref": "#/definitions/Codes"
        },
        "addr1": {
          "type": "string"
        },
        "addr2": {
          "type": "string"
        },
        "addr3": {
          "type": "string"
        },
        "addr4": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "stateId": {
          "$ref": "#/definitions/Codes"
        },
        "zipCode": {
          "type": "string"
        },
        "countryCode": {
          "$ref": "#/definitions/Codes"
        },
        "locationAreaDesc": {
          "type": "string"
        },
        "primaryLocCode": {
          "$ref": "#/definitions/Codes"
        },
        "locationTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "onPremiseFlag": {
          "type": "boolean"
        },
        "noOfInjuries": {
          "format": "int32",
          "type": "integer"
        },
        "noOfFatalities": {
          "format": "int32",
          "type": "integer"
        },
        "causeCode": {
          "$ref": "#/definitions/Codes"
        },
        "dateOfEvent": {
          "type": "string"
        },
        "timeOfEvent": {
          "type": "string"
        },
        "dateReported": {
          "type": "string"
        },
        "timeReported": {
          "type": "string"
        },
        "rptdByEid": {
          "$ref": "#/definitions/Lookups"
        },
        "dateRptdToRm": {
          "type": "string"
        },
        "dateToFollowUp": {
          "type": "string"
        },
        "accountId": {
          "format": "int32",
          "type": "integer"
        },
        "datePhysAdvised": {
          "type": "string"
        },
        "timePhysAdvised": {
          "type": "string"
        },
        "treatmentGiven": {
          "type": "boolean"
        },
        "releaseSigned": {
          "type": "boolean"
        },
        "deptHeadAdvised": {
          "type": "boolean"
        },
        "physNotes": {
          "type": "string"
        },
        "dateCarrierNotif": {
          "type": "string"
        },
        "injuryFromDate": {
          "type": "string"
        },
        "injuryToDate": {
          "type": "string"
        },
        "eventDescription_HTMLComments": {
          "type": "string"
        },
        "locationAreaDesc_HTMLComments": {
          "type": "string"
        },
        "requireIntervention": {
          "type": "boolean"
        },
        "isRecipient": {
          "type": "boolean"
        },
        "confRecFlag": {
          "type": "boolean"
        },
        "catastropheNumber": {
          "$ref": "#/definitions/Codes"
        },
        "eventXAction": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "eventXOutcome": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "eventQM": {
          "$ref": "#/definitions/EventQM"
        },
        "reporterEntity": {
          "$ref": "#/definitions/Entity"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "EventQM": {
      "type": "object",
      "properties": {
        "eventId": {
          "format": "int32",
          "type": "integer"
        },
        "medCaseNumber": {
          "type": "string"
        },
        "medFileCode": {
          "$ref": "#/definitions/Codes"
        },
        "medIndCode": {
          "$ref": "#/definitions/Codes"
        },
        "irStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "irReviewerUid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserLookup"
          }
        },
        "irReviewerName": {
          "type": "string"
        },
        "irDetermCode": {
          "$ref": "#/definitions/Codes"
        },
        "irReviewDate": {
          "type": "string"
        },
        "irFollowUpDate": {
          "type": "string"
        },
        "irComments": {
          "type": "string"
        },
        "irRecActions": {
          "type": "string"
        },
        "paStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "paReviewerEid": {
          "$ref": "#/definitions/Lookups"
        },
        "paDetermCode": {
          "$ref": "#/definitions/Codes"
        },
        "paReviewDate": {
          "type": "string"
        },
        "paFollowUpDate": {
          "type": "string"
        },
        "paComments": {
          "type": "string"
        },
        "paRecActions": {
          "type": "string"
        },
        "cdStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "cdCommitteeCode": {
          "$ref": "#/definitions/Codes"
        },
        "cdDeptEid": {
          "$ref": "#/definitions/Codes"
        },
        "cdDetermCode": {
          "$ref": "#/definitions/Codes"
        },
        "cdReviewDate": {
          "type": "string"
        },
        "cdFollowUpDate": {
          "type": "string"
        },
        "cdComments": {
          "type": "string"
        },
        "cdRecActions": {
          "type": "string"
        },
        "qmStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "qmReviewerUid": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserLookup"
          }
        },
        "qmReviewerName": {
          "type": "string"
        },
        "qmDetermCode": {
          "$ref": "#/definitions/Codes"
        },
        "qmReviewDate": {
          "type": "string"
        },
        "qmCloseDate": {
          "type": "string"
        },
        "qmComments": {
          "type": "string"
        },
        "qmRecActions": {
          "type": "string"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "ProgressNotesType": {
      "description": "Class ProgressNotesType.",
      "type": "object",
      "properties": {
        "routeValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "tempnoteId": {
          "format": "int32",
          "description": "Gets or Sets  the temporary note identifier.",
          "type": "integer"
        },
        "colorCode": {
          "description": "Gets or sets the COLOR_CODE.",
          "type": "string"
        },
        "clientProgId": {
          "format": "int32",
          "type": "integer"
        },
        "isAttached": {
          "description": "Gets or sets the IsAttached.",
          "type": "boolean"
        },
        "impFlag": {
          "format": "int32",
          "description": "Gets or sets the IMP_FLAG.",
          "type": "integer"
        },
        "impFlagYesNo": {
          "description": "Gets or sets the IMP_FLAG.",
          "type": "string"
        },
        "deleteFlag": {
          "format": "int32",
          "description": "Gets or sets the DELETED_FLAG.",
          "type": "integer"
        },
        "state": {
          "description": "Gets or sets the state.",
          "type": "string"
        },
        "additionalParams": {
          "$ref": "#/definitions/NotesAdditionalParams",
          "description": "Gets or sets the additional parameter."
        },
        "securityList": {
          "description": "Gets or sets the security list.",
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "claimant": {
          "description": "Gets or sets the claimant.",
          "type": "string"
        },
        "freezeText": {
          "description": "Gets or sets a value indicating whether [freeze text].",
          "type": "boolean"
        },
        "showDateStamp": {
          "description": "Gets or sets a value indicating whether [show date stamp].",
          "type": "boolean"
        },
        "userName": {
          "description": "Gets or sets the name of the user.",
          "type": "string"
        },
        "sortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "rowIndex": {
          "format": "int32",
          "description": "Gets or sets the row index.",
          "type": "integer"
        },
        "direction": {
          "description": "Gets or sets the direction.",
          "type": "string"
        },
        "enhancedTimeLimit": {
          "description": "Gets or sets the enhanced time limit.",
          "type": "string"
        },
        "userEditingRights": {
          "description": "Gets or sets a value indicating whether [user editing rights].",
          "type": "boolean"
        },
        "printMultiplePages": {
          "description": "Gets or sets a value indicating whether [print multiple pages].",
          "type": "boolean"
        },
        "objFilter": {
          "$ref": "#/definitions/Filter",
          "description": "Gets or sets the object filter."
        },
        "eventID": {
          "format": "int32",
          "description": "Gets or sets the event identifier.",
          "type": "integer"
        },
        "claimID": {
          "format": "int32",
          "description": "Gets or sets the claim identifier.",
          "type": "integer"
        },
        "lob": {
          "description": "Gets or sets the lob.",
          "type": "string"
        },
        "sortCol": {
          "description": "Gets or sets the sort col.",
          "type": "string"
        },
        "dataType": {
          "description": "Gets or sets the type of the data.",
          "type": "string"
        },
        "ascending": {
          "description": "Gets or sets the ascending.",
          "type": "string"
        },
        "temp": {
          "description": "Gets or sets the temporary.",
          "type": "string"
        },
        "formName": {
          "description": "Gets or sets the name of the form.",
          "type": "string"
        },
        "eventNumber": {
          "description": "Gets or sets the event number.",
          "type": "string"
        },
        "functionToCall": {
          "description": "Gets or sets the function to call.",
          "type": "string"
        },
        "activateFilter": {
          "description": "Gets or sets a value indicating whether [activate filter].",
          "type": "boolean"
        },
        "applySort": {
          "description": "Gets or sets the apply sort.",
          "type": "string"
        },
        "progressNoteReport": {
          "description": "Gets or sets the progress note export file path.",
          "type": "string"
        },
        "printOrder1": {
          "description": "Gets or sets the print order1.",
          "type": "string"
        },
        "printOrder2": {
          "description": "Gets or sets the print order2.",
          "type": "string"
        },
        "printOrder3": {
          "description": "Gets or sets the print order3.",
          "type": "string"
        },
        "noteTypeCodeId": {
          "description": "Gets or sets the note type code identifier.",
          "type": "string"
        },
        "templateId": {
          "description": "Gets or sets the template identifier.",
          "type": "string"
        },
        "templateName": {
          "description": "Gets or sets the name of the template.",
          "type": "string"
        },
        "policyID": {
          "format": "int32",
          "description": "Gets or sets the policy identifier.",
          "type": "integer"
        },
        "policyName": {
          "description": "Gets or sets the name of the policy.",
          "type": "string"
        },
        "policyNumber": {
          "description": "Gets or sets the policy number.",
          "type": "string"
        },
        "codeId": {
          "description": "Gets or sets the code identifier.",
          "type": "string"
        },
        "notesPolicyClaimView": {
          "description": "Gets or sets a value indicating whether [notes policy claim view].",
          "type": "boolean"
        },
        "iGenerateReportThresholdExceeded": {
          "format": "int32",
          "description": "Gets or sets the i generate report threshold exceeded.",
          "type": "integer"
        },
        "sortPref": {
          "description": "Gets or sets the sort preference.",
          "type": "string"
        },
        "piName": {
          "description": "Gets or sets the name of the pi.",
          "type": "string"
        },
        "bIsMobileAdjuster": {
          "description": "Gets or sets a value indicating whether [b is mobile adjuster].",
          "type": "boolean"
        },
        "bIsMobilityAdjuster": {
          "description": "Gets or sets a value indicating whether [b is mobility adjuster].",
          "type": "boolean"
        },
        "claimNumber": {
          "description": "Gets or sets the claim number.",
          "type": "string"
        },
        "caseMgtRowID": {
          "format": "int32",
          "description": "Gets or sets the case MGT row identifier.",
          "type": "integer"
        },
        "viewNotesOption": {
          "description": "Gets or sets the view notes option.",
          "type": "string"
        },
        "viewNotesTypeList": {
          "description": "Gets or sets the view notes type list.",
          "type": "string"
        },
        "caseMgrParent": {
          "description": "Gets or sets the case MGR parent.",
          "type": "string"
        },
        "demanOfferParent": {
          "description": "Gets or sets the demand offer parent.",
          "type": "string"
        },
        "demanOfferParentId": {
          "format": "int32",
          "description": "Gets or sets the demand offer parent identifier.",
          "type": "integer"
        },
        "orderPref": {
          "description": "Gets or sets the order preference.",
          "type": "string"
        },
        "claimantId": {
          "format": "int32",
          "description": "Gets or sets the claimant identifier.",
          "type": "integer"
        },
        "userPref": {
          "description": "Gets or sets the user preference.",
          "type": "string"
        },
        "additionalData": {
          "description": "Gets or sets the additional data.",
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "allowClaimantNotes": {
          "description": "Gets or sets the AllowClaimantNotes setting.",
          "type": "boolean"
        },
        "allowAttachmentNotes": {
          "description": "Gets or sets the AllowAttachmentNotes - allow only for DOCUMENT_MANAGEMENT_VENDOR_NAME - RiskmasterX setting.",
          "type": "boolean"
        },
        "allowPdfEditing": {
          "description": "Allow editing of pdf document.",
          "type": "boolean"
        },
        "pdfEditingPassword": {
          "description": "allow editing of pdf password.",
          "type": "string"
        },
        "reportHeader": {
          "description": "Gets or Sets the report header.",
          "type": "string"
        },
        "progressNotesAutoSave": {
          "description": "Gets or Sets Progessnotes auto save time.",
          "type": "string"
        },
        "alertNoteAutoSave": {
          "description": "Gets or sets alert time for auto save note.",
          "type": "string"
        },
        "clmProgressNotesFlag": {
          "type": "boolean"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgressNote"
          }
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "totalNumberOfPages": {
          "format": "int32",
          "type": "integer"
        },
        "claimProgressNoteId": {
          "format": "int32",
          "type": "integer"
        },
        "attachTable": {
          "type": "string"
        },
        "attachRecordId": {
          "type": "string"
        },
        "enhancedNotesThresholdExceeded": {
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "NotesAdditionalParams": {
      "description": "Common class to support additional parameters of grid",
      "type": "object",
      "properties": {
        "gridId": {
          "description": "Gets or sets the grid identifier.",
          "type": "string"
        },
        "searchCat": {
          "description": "Gets or sets the search cat.",
          "type": "string"
        },
        "totalCount": {
          "format": "int32",
          "description": "Gets or sets the total count.",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "description": "Gets or sets the size of the page.",
          "type": "integer"
        },
        "sortColumn": {
          "description": "Gets or sets the sortColumn.",
          "type": "string"
        },
        "direction": {
          "description": "Gets or sets the Sort direction.",
          "type": "string"
        }
      }
    },
    "Filter": {
      "description": "Class Filter.",
      "type": "object",
      "properties": {
        "claimIDList": {
          "description": "Gets or sets the claim identifier list.",
          "type": "string"
        },
        "userTypeList": {
          "description": "Gets or sets the user type list.",
          "type": "string"
        },
        "noteTypeList": {
          "description": "Gets or sets the note type list.",
          "type": "string"
        },
        "enteredByList": {
          "description": "Gets or sets the entered by list.",
          "type": "string"
        },
        "subjectList": {
          "description": "Gets or sets the subject list.",
          "type": "string"
        },
        "searchImpFlag": {
          "description": "Gets or sets the searchImpFlag.",
          "type": "string"
        },
        "activityFromDate": {
          "description": "Gets or sets the activity from date.",
          "type": "string"
        },
        "activityToDate": {
          "description": "Gets or sets the activity to date.",
          "type": "string"
        },
        "notesTextContains": {
          "description": "Gets or sets the notes text contains.",
          "type": "string"
        },
        "sortBy": {
          "description": "Gets or sets the sort by.",
          "type": "string"
        },
        "orderBy": {
          "description": "Gets or sets the order by.",
          "type": "string"
        },
        "claimantIDList": {
          "description": "Gets or sets the claimant identifier list.",
          "type": "string"
        }
      }
    },
    "ProgressNote": {
      "description": "Class ProgressNote.",
      "type": "object",
      "properties": {
        "enhancedNoteDisplayTimeAgo": {
          "type": "string"
        },
        "notelastupdated": {
          "type": "string"
        },
        "dateTimeupdated": {
          "description": "Gets or Sets date and time of note updated.",
          "type": "string"
        },
        "dateTimeUpdatedDbValue": {
          "description": "Gets or Sets date and time of note updated.",
          "type": "string"
        },
        "updatedDraftbyuser": {
          "description": "Gets or sets draft updated by user.",
          "type": "string"
        },
        "tempnoteId": {
          "format": "int32",
          "description": "Gets or Sets  the temporary note identifier.",
          "type": "integer"
        },
        "colorCode": {
          "description": "Gets or sets the COLOR_CODE.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/Link",
          "description": "set links for right list"
        },
        "isAttached": {
          "description": "Gets or sets the IsAttached.",
          "type": "boolean"
        },
        "impFlag": {
          "format": "int32",
          "description": "Gets or sets the IMP_FLAG.",
          "type": "integer"
        },
        "impFlagYesNo": {
          "description": "Gets or sets the IMP_FLAG.",
          "type": "string"
        },
        "deleteFlag": {
          "format": "int32",
          "description": "Gets or sets the DELETED_FLAG.",
          "type": "integer"
        },
        "attachTable": {
          "description": "Gets or sets the attach table.",
          "type": "string"
        },
        "attachRecordId": {
          "description": "Gets or sets the attach record identifier.",
          "type": "string"
        },
        "claimProgressNoteId": {
          "format": "int32",
          "description": "Gets or sets the claim progress note identifier.",
          "type": "integer"
        },
        "claimNumber": {
          "description": "Gets or sets the claim number.",
          "type": "string"
        },
        "eventNumber": {
          "description": "Gets or sets the event number.",
          "type": "string"
        },
        "attachedTo": {
          "description": "Gets or sets the attached to.",
          "type": "string"
        },
        "enteredBy": {
          "description": "Gets or sets the entered by.",
          "type": "string"
        },
        "subject": {
          "description": "Gets or sets the subject.",
          "type": "string"
        },
        "enteredByName": {
          "description": "Gets or sets the name of the entered by.",
          "type": "string"
        },
        "dateEntered": {
          "description": "Gets or sets the date entered.",
          "type": "string"
        },
        "dateEnteredForSort": {
          "description": "Gets or sets the date entered for sort.",
          "type": "string"
        },
        "dateCreated": {
          "description": "Gets or sets the date created.",
          "type": "string"
        },
        "timeCreated": {
          "description": "Gets or sets the time created.",
          "type": "string"
        },
        "dateTimeCreated": {
          "description": "Gets or sets the time created.",
          "type": "string"
        },
        "timeCreatedForSort": {
          "description": "Gets or sets the time created for sort.",
          "type": "string"
        },
        "noteTypeCode": {
          "format": "int32",
          "description": "Gets or sets the note type code.",
          "type": "integer"
        },
        "noteType": {
          "description": "Gets or sets the type of the note.",
          "type": "string"
        },
        "userType": {
          "description": "Gets or sets the type of the user.",
          "type": "string"
        },
        "userTypeCode": {
          "description": "Gets or sets the user type code.",
          "type": "string"
        },
        "noteTextMemo": {
          "description": "Gets or sets the note text memo.",
          "type": "string"
        },
        "noteMemo": {
          "description": "Gets or sets the note memo.",
          "type": "string"
        },
        "noteMemoTrimmed": {
          "description": "Gets or sets the note memo trimmed.",
          "type": "string"
        },
        "subjectTrimmed": {
          "description": "Gets or sets the subject trimmed.",
          "type": "string"
        },
        "noteMemoCareTech": {
          "description": "Gets or sets the note memo care tech.",
          "type": "string"
        },
        "adjusterName": {
          "description": "Gets or sets the name of the adjuster.",
          "type": "string"
        },
        "newRecord": {
          "description": "Gets or sets a value indicating whether [new record].",
          "type": "boolean"
        },
        "eventID": {
          "format": "int32",
          "description": "Gets or sets the event identifier.",
          "type": "integer"
        },
        "claimID": {
          "format": "int32",
          "description": "Gets or sets the claim identifier.",
          "type": "integer"
        },
        "templateID": {
          "format": "int32",
          "description": "Gets or sets the template identifier.",
          "type": "integer"
        },
        "templateName": {
          "description": "Gets or sets the name of the template.",
          "type": "string"
        },
        "policyID": {
          "format": "int32",
          "description": "Gets or sets the policy identifier.",
          "type": "integer"
        },
        "policyName": {
          "description": "Gets or sets the name of the policy.",
          "type": "string"
        },
        "policyNumber": {
          "description": "Gets or sets the policy number.",
          "type": "string"
        },
        "codeId": {
          "format": "int32",
          "description": "Gets or sets the code identifier.",
          "type": "integer"
        },
        "isNoteEditable": {
          "description": "Gets or sets the is note editable.",
          "type": "string"
        },
        "piName": {
          "description": "Gets or sets the name of the pi.",
          "type": "string"
        },
        "bIsMobileAdjuster": {
          "description": "Gets or sets a value indicating whether [b is mobile adjuster].",
          "type": "boolean"
        },
        "attachedTable": {
          "description": "Gets or sets the attached table.",
          "type": "string"
        },
        "attachedRecordId": {
          "format": "int32",
          "description": "Gets or sets the attached record identifier.",
          "type": "integer"
        },
        "bIsMobilityAdjuster": {
          "description": "Gets or sets a value indicating whether [b is mobility adjuster].",
          "type": "boolean"
        },
        "rowIndex": {
          "format": "int64",
          "description": "Gets or sets the index of the row.",
          "type": "integer"
        },
        "containsDraft": {
          "description": "Check if draft exists.",
          "type": "boolean"
        }
      }
    },
    "GetNoteDetailsObject": {
      "description": "Class GetNoteDetailsObject.",
      "type": "object",
      "properties": {
        "routeValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "tempNoteId": {
          "format": "int32",
          "description": "Gets or Sets  the temporary note identifier.",
          "type": "integer"
        },
        "html": {
          "description": "Gets or sets the HTML.",
          "type": "string"
        },
        "text": {
          "description": "Gets or sets the text.",
          "type": "string"
        },
        "noteTypeCode": {
          "format": "int32",
          "description": "Gets or sets the note type code.",
          "type": "integer"
        },
        "noteTypeDesc": {
          "description": "Gets or sets the note type description.",
          "type": "string"
        },
        "templateId": {
          "format": "int32",
          "description": "Gets or sets the template identifier.",
          "type": "integer"
        },
        "templateName": {
          "description": "Gets or sets the name of the template.",
          "type": "string"
        },
        "activityDate": {
          "description": "Gets or sets the activity date.",
          "type": "string"
        },
        "dataChangedByInitScript": {
          "description": "Gets or sets a value indicating whether [data changed by initialize script].",
          "type": "boolean"
        },
        "subject": {
          "description": "Gets or sets the subject.",
          "type": "string"
        },
        "colorCode": {
          "description": "Gets or sets the COLOR_CODE.",
          "type": "string"
        },
        "impFlag": {
          "format": "int32",
          "description": "Gets or sets the IMP_FLAG.",
          "type": "integer"
        },
        "impFlagYesNo": {
          "description": "Gets or sets the IMP_FLAG.",
          "type": "string"
        },
        "deleteFlag": {
          "format": "int32",
          "description": "Gets or sets the DELETED_FLAG.",
          "type": "integer"
        },
        "dateTimeupdated": {
          "description": "Gets or Sets date  and time of note updated.",
          "type": "string"
        },
        "notelastupdated": {
          "type": "string"
        },
        "timeCreated": {
          "description": "Gets or Sets time of note created.",
          "type": "string"
        },
        "dateCreated": {
          "description": "Gets or Sets date of note created.",
          "type": "string"
        },
        "dateTimeDraftAdded": {
          "type": "string"
        },
        "updatedDraftbyuser": {
          "description": "Gets or Sets draft updated by user.",
          "type": "string"
        },
        "addedbyuser": {
          "description": "Gets or Sets the note added by user.",
          "type": "string"
        },
        "loginname": {
          "description": "Gets or Sets  login name.",
          "type": "string"
        },
        "isMainNoteDeleted": {
          "type": "boolean"
        },
        "enteredByName": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgressNote"
          }
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "totalNumberOfPages": {
          "format": "int32",
          "type": "integer"
        },
        "claimProgressNoteId": {
          "format": "int32",
          "type": "integer"
        },
        "formName": {
          "type": "string"
        },
        "lob": {
          "type": "string"
        },
        "attachTable": {
          "type": "string"
        },
        "attachRecordId": {
          "type": "string"
        },
        "enhancedNotesThresholdExceeded": {
          "format": "int32",
          "type": "integer"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ReserveCurrent": {
      "type": "object",
      "properties": {
        "claimId": {
          "format": "int32",
          "type": "integer"
        },
        "rcRowId": {
          "format": "int32",
          "type": "integer"
        },
        "unitId": {
          "format": "int32",
          "type": "integer"
        },
        "claimantEid": {
          "format": "int32",
          "type": "integer"
        },
        "balanceAmount": {
          "format": "double",
          "type": "number"
        },
        "reserveTypeCode": {
          "format": "int32",
          "type": "integer"
        },
        "reserveAmount": {
          "format": "double",
          "type": "number"
        },
        "incurredAmount": {
          "format": "double",
          "type": "number"
        },
        "paidTotal": {
          "format": "double",
          "type": "number"
        },
        "collectionTotal": {
          "format": "double",
          "type": "number"
        },
        "dateEntered": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "crc": {
          "type": "string"
        },
        "secDeptEid": {
          "format": "int32",
          "type": "integer"
        },
        "resStatusCode": {
          "format": "int32",
          "type": "integer"
        },
        "allocatedAmount": {
          "format": "double",
          "type": "number"
        },
        "claimCurrencyCode": {
          "format": "int32",
          "type": "integer"
        },
        "claimCurrReserveAmt": {
          "format": "double",
          "type": "number"
        },
        "claimCurrIncurrredAmt": {
          "format": "double",
          "type": "number"
        },
        "claimCurrCollectionTotal": {
          "format": "double",
          "type": "number"
        },
        "claimCurrPaidTotal": {
          "format": "double",
          "type": "number"
        },
        "claimCurrBalanceAmt": {
          "format": "double",
          "type": "number"
        },
        "policyCvgSeqNo": {
          "format": "int32",
          "type": "integer"
        },
        "coverageLossId": {
          "format": "int32",
          "type": "integer"
        },
        "assignAdjusterEid": {
          "$ref": "#/definitions/Lookups"
        },
        "isFirstFinalReserve": {
          "format": "int32",
          "type": "integer"
        },
        "legacyUniqueIdentifier": {
          "type": "string"
        },
        "benefitCeaseDate": {
          "type": "string"
        },
        "benefitReviewDate": {
          "type": "string"
        },
        "policyCurrencyCode": {
          "format": "int32",
          "type": "integer"
        },
        "policyCurrRsvAmt": {
          "format": "double",
          "type": "number"
        },
        "policyCurrIncurredAmt": {
          "format": "double",
          "type": "number"
        },
        "policyCurrCollAmt": {
          "format": "double",
          "type": "number"
        },
        "policyCurrPaidAmt": {
          "format": "double",
          "type": "number"
        },
        "policyCurrBalAmt": {
          "format": "double",
          "type": "number"
        },
        "currencyConversionDate": {
          "type": "string"
        },
        "lssResExpFlag": {
          "format": "int32",
          "type": "integer"
        },
        "cmbPolicy": {
          "format": "int32",
          "type": "integer"
        },
        "cmbCoverageType": {
          "format": "int32",
          "type": "integer"
        },
        "cmbUnit": {
          "format": "int32",
          "type": "integer"
        },
        "cmbdisablitycat": {
          "format": "int32",
          "type": "integer"
        },
        "cmbCoverageLossType": {
          "format": "int32",
          "type": "integer"
        },
        "cmbReserveType": {
          "format": "int32",
          "type": "integer"
        },
        "disabilityLossType1": {
          "format": "int32",
          "type": "integer"
        },
        "cmbStatusAdd": {
          "format": "int32",
          "type": "integer"
        },
        "cmbSubReserveType": {
          "format": "int32",
          "type": "integer"
        },
        "coverageId": {
          "format": "int32",
          "type": "integer"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "ReserveList": {
      "description": "Returns List of Reserves/Additional Information/State",
      "type": "object",
      "properties": {
        "routeValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "state": {
          "description": "Gets or sets the state.",
          "type": "string"
        },
        "additionalParams": {
          "$ref": "#/definitions/FinancialAdditionalParam",
          "description": "Gets or sets the additional parameters."
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReserveListingGrid"
          }
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "totalNumberOfPages": {
          "format": "int32",
          "type": "integer"
        },
        "claimId": {
          "format": "int32",
          "type": "integer"
        },
        "formName": {
          "type": "string"
        },
        "lob": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "FinancialAdditionalParam": {
      "description": "Returns List of Additional Information",
      "type": "object",
      "properties": {
        "gridId": {
          "description": "Gets or sets the grid identifier.",
          "type": "string"
        },
        "policyCvgRowId": {
          "description": "Gets or sets the policy CVG row identifier.",
          "type": "boolean"
        },
        "multiCurrency": {
          "format": "int32",
          "description": "Gets or sets the multi currency.",
          "type": "integer"
        },
        "isClaimCurrencySet": {
          "description": "Gets or sets the is claim currency set.",
          "type": "string"
        },
        "reserveUnitID": {
          "description": "Gets or sets the reserve unit identifier.",
          "type": "string"
        },
        "reserveClaimantEid": {
          "description": "Gets or sets the reserve claimant eid.",
          "type": "string"
        },
        "caption": {
          "description": "Gets or sets the caption.",
          "type": "string"
        },
        "claimId": {
          "format": "int32",
          "description": "Gets or sets the claimid.",
          "type": "integer"
        },
        "claimNumber": {
          "description": "Gets or sets the claimnumber.",
          "type": "string"
        },
        "paymentFrozenFlag": {
          "description": "Gets or sets the paymentfrozenflag.",
          "type": "boolean"
        },
        "lob": {
          "format": "int32",
          "description": "Gets or sets the LOB.",
          "type": "integer"
        },
        "currencyTypeList": {
          "description": "Gets or sets the currency type list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyTypeList"
          }
        },
        "preventReserveToModifyZero": {
          "description": "Gets or sets the prevt resource mod zero.",
          "type": "boolean"
        },
        "lssEnable": {
          "description": "Gets or sets the rmxlssenable.",
          "type": "boolean"
        },
        "preventCollectionOnLOB": {
          "format": "int32",
          "description": "Gets or sets the preventcollonlob.",
          "type": "integer"
        },
        "applyDeductibleToPayments": {
          "description": "Gets or sets the apply ded to payments.",
          "type": "string"
        },
        "deductibleRecoveryReserveCode": {
          "format": "int32",
          "description": "Gets or sets the ded recovery reserve code.",
          "type": "integer"
        },
        "allowManualDeductible": {
          "description": "Gets or sets the allow manualdeductible.",
          "type": "boolean"
        },
        "notDetDedVal": {
          "description": "Gets or sets the not det ded value.",
          "type": "string"
        },
        "fpDedVal": {
          "description": "Gets or sets the fp ded value.",
          "type": "string"
        },
        "noneDedVal": {
          "description": "Gets or sets the none ded value.",
          "type": "string"
        },
        "currencyTypeForClaim": {
          "description": "Gets or sets the currency type for claim.",
          "type": "string"
        },
        "hideProgressNotes": {
          "description": "Gets or sets the hideprogressnotes.",
          "type": "string"
        },
        "usePolicyCvgRowId": {
          "description": "Gets or sets the use policy CVG row identifier.",
          "type": "string"
        },
        "cancelledShortCode": {
          "description": "Gets or sets the cancelled short code.",
          "type": "string"
        },
        "closedShortCode": {
          "description": "Gets or sets the closed short code.",
          "type": "string"
        },
        "isMoveToPermission": {
          "description": "Gets or sets the is move to permission.",
          "type": "string"
        },
        "currencyTypeID": {
          "description": "Gets or sets the currency type identifier.",
          "type": "string"
        },
        "isAddPermission": {
          "description": "Gets or sets the is add permission.",
          "type": "string"
        },
        "isPaymentHistPermission": {
          "description": "Gets or sets the is payment hist permission.",
          "type": "string"
        },
        "isUpdatePermission": {
          "description": "Gets or sets the is update permission.",
          "type": "string"
        },
        "isViewPermission": {
          "description": "Gets or sets the is view permission.",
          "type": "string"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isReservePermission": {
          "description": "Gets or sets the is reserve permission.",
          "type": "string"
        },
        "makePayment": {
          "description": "Gets or sets the make payment.",
          "type": "string"
        },
        "enhancedNotes": {
          "description": "Gets or sets the enhanced notes.",
          "type": "string"
        },
        "enableFirstAndFinalPayment": {
          "description": "Gets or sets the enable first and final payment.",
          "type": "string"
        },
        "isTande": {
          "description": "Gets or sets the istande.",
          "type": "string"
        },
        "useReserveWorkSheet": {
          "description": "Gets or sets the use reserve work sheet.",
          "type": "string"
        },
        "links": {
          "description": "Gets or sets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "claimantRowId": {
          "format": "int32",
          "description": "Gets or sets the claimant row identifier.",
          "type": "integer"
        },
        "unitRowId": {
          "format": "int32",
          "description": "Gets or sets the unit row identifier.",
          "type": "integer"
        },
        "editReserveVisible": {
          "description": "Gets or sets a value indicating whether [edit reserve visible].",
          "type": "boolean"
        },
        "scheduleCheckVisible": {
          "description": "Gets or sets a value indicating whether [schedule check visible].",
          "type": "boolean"
        },
        "makePaymentVisible": {
          "description": "Gets or sets a value indicating whether [make payment visible].",
          "type": "boolean"
        },
        "addCollectionVisible": {
          "description": "Gets or sets a value indicating whether [add collection visible].",
          "type": "boolean"
        },
        "addNonOccPaymentVisible": {
          "type": "boolean"
        },
        "reserveHistoryVisible": {
          "description": "Gets or sets a value indicating whether [reserve history visible].",
          "type": "boolean"
        },
        "exportToLSSVisible": {
          "description": "Gets or sets a value indicating whether [export to LSS visible].",
          "type": "boolean"
        },
        "exportToVSSVisible": {
          "description": "Gets or sets a value indicating whether [export to VSS visible].",
          "type": "boolean"
        },
        "pucSummaryVisible": {
          "description": "Gets or sets a value indicating whether [puc summary visible].",
          "type": "boolean"
        },
        "fdhVisible": {
          "description": "Gets or sets a value indicating whether [FDH visible].",
          "type": "boolean"
        },
        "moveFinancialsVisible": {
          "description": "Gets or sets a value indicating whether [move financials visible].",
          "type": "boolean"
        },
        "transSelectedRsvVisible": {
          "description": "Gets or sets a value indicating whether [trans selected RSV visible].",
          "type": "boolean"
        },
        "timeAndExpenseVisible": {
          "description": "Gets or sets a value indicating whether [time and expense visible].",
          "type": "boolean"
        },
        "isPolicyCvgeRowId": {
          "description": "Gets or sets a value indicating whether [having Policy coverage Id].",
          "type": "boolean"
        },
        "addManualDeductibleRecoveryVisible": {
          "description": "Gets or sets a value indicating whether [add manual deductible recovery visible].",
          "type": "boolean"
        },
        "reserveWorkSheetVisible": {
          "description": "Gets or sets a value indicating whether [add Reserve Work sheet visible].",
          "type": "boolean"
        },
        "reserveWorkSheetHistoryVisible": {
          "description": "Gets or sets a value indicating whether [add Reserve Work sheet history visible].",
          "type": "boolean"
        },
        "claimCurrencyDefined": {
          "description": "Gets or sets a value indicating whether [claim currency defined].",
          "type": "boolean"
        },
        "autoCheckData": {
          "description": "Gets or sets the automatic check data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRelatedToAutoCheck"
          }
        },
        "showMoreCalcOptions": {
          "description": "Gets or sets a value indicating whether [show more calculate options].",
          "type": "boolean"
        },
        "showAdjudicate": {
          "description": "Gets or sets a value indicating whether [show adjudicate].",
          "type": "boolean"
        },
        "showEOB": {
          "description": "Gets or sets a value indicating whether [show eob].",
          "type": "boolean"
        },
        "listCalcOptions": {
          "description": "Gets or sets the list calculate options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalcOption"
          }
        },
        "checkPendingRSW": {
          "type": "object"
        },
        "amaliExportVisible": {
          "description": "Gets or sets a value indicating whether [export to Amali visible].",
          "type": "boolean"
        },
        "lineOfBusiness": {
          "format": "int32",
          "description": "Gets or sets the line of business.",
          "type": "integer"
        },
        "totalBalance": {
          "description": "Gets or sets the Total Balance.",
          "type": "string"
        },
        "totalCollection": {
          "description": "Gets or sets the Total Collection.",
          "type": "string"
        },
        "totalPaid": {
          "description": "Gets or sets the Total Paid.",
          "type": "string"
        },
        "totalIncurred": {
          "description": "Gets or sets the Total Incurred.",
          "type": "string"
        },
        "isAcceleratedClaim": {
          "description": "Gets or sets a Accelerated Death",
          "type": "boolean"
        },
        "totalAllocated": {
          "description": "Gets or sets the Total Allocated",
          "type": "string"
        },
        "totalPrinted": {
          "description": "Gets or sets the Total Printed",
          "type": "string"
        },
        "displayAllocation": {
          "description": "Gets or sets the Allocation Flag",
          "type": "boolean"
        },
        "useAWD": {
          "description": "Gets or sets the AWD Flag",
          "type": "boolean"
        },
        "odgReserveData": {
          "description": "Gets or sets the ODG Reserve Data.",
          "type": "object"
        }
      }
    },
    "ReserveListingGrid": {
      "description": "Returns List of Reserves",
      "type": "object",
      "properties": {
        "reserveTypeCode": {
          "format": "int32",
          "description": "Gets or sets the reserve type code.",
          "type": "integer"
        },
        "reserveDescription": {
          "description": "Gets or sets the reserve description.",
          "type": "string"
        },
        "statusCode": {
          "description": "Gets or sets the status code.",
          "type": "string"
        },
        "reason": {
          "description": "Gets or sets the reason.",
          "type": "string"
        },
        "statusDescription": {
          "description": "Gets or sets the status description.",
          "type": "string"
        },
        "reserveAmount": {
          "description": "Gets or sets the reserve amount.",
          "type": "string"
        },
        "balance": {
          "description": "Gets or sets the balance.",
          "type": "string"
        },
        "balanceDbValue": {
          "format": "double",
          "description": "Gets or sets the balance database value.",
          "type": "number"
        },
        "pmiAmount": {
          "description": "Gets or sets the pmi amount.",
          "type": "string"
        },
        "pmiAmountDbValue": {
          "description": "Gets or sets the pmi amount database value.",
          "type": "string"
        },
        "twAmount": {
          "description": "Gets or sets the tw amount.",
          "type": "string"
        },
        "twAmountDbValue": {
          "description": "Gets or sets the tw amount database value.",
          "type": "string"
        },
        "incurred": {
          "description": "Gets or sets the incurred.",
          "type": "string"
        },
        "incurredDbValue": {
          "format": "double",
          "description": "Gets or sets the incurred database value.",
          "type": "number"
        },
        "benefitReviewDate": {
          "description": "Gets or sets the benefit review date.",
          "type": "string"
        },
        "benefitReviewDateDbValue": {
          "description": "Gets or sets the benefit review date database value.",
          "type": "string"
        },
        "benefitCeaseDate": {
          "description": "Gets or sets the benefit cease date.",
          "type": "string"
        },
        "benefitCeaseDateDbValue": {
          "description": "Gets or sets the benefit cease date database value.",
          "type": "string"
        },
        "paidAmount": {
          "description": "Gets or sets the paid amount.",
          "type": "string"
        },
        "paidDbValue": {
          "format": "double",
          "description": "Gets or sets the paid database value.",
          "type": "number"
        },
        "allocatedAmount": {
          "description": "Gets or sets the Allocated amount.",
          "type": "string"
        },
        "allocatedDbValue": {
          "description": "Gets or sets the allocated database value.",
          "type": "string"
        },
        "printedPaymentAmount": {
          "description": "Gets or sets the Printed payment amount.",
          "type": "string"
        },
        "printedPaymentDbValue": {
          "description": "Gets or sets the Printed payment database value.",
          "type": "string"
        },
        "collectionAmount": {
          "description": "Gets or sets the collection amount.",
          "type": "string"
        },
        "collectedDbValue": {
          "format": "double",
          "description": "Gets or sets the collected database value.",
          "type": "number"
        },
        "reserveUnitId": {
          "format": "int32",
          "description": "Gets or sets the reserve unit identifier.",
          "type": "integer"
        },
        "reserveSubType": {
          "description": "Gets or sets the type of the reserve sub.",
          "type": "string"
        },
        "preventCollectionOnReserve": {
          "description": "Gets or sets the prevent collection on reserve.",
          "type": "string"
        },
        "claimCurrencyBalanceAmount": {
          "description": "Gets or sets the claim currency balance amount.",
          "type": "string"
        },
        "claimCurrencyReserveAmount": {
          "description": "Gets or sets the claim currency reserve amount.",
          "type": "string"
        },
        "policyCoverageRowId": {
          "description": "Gets or sets the policy coverage row identifier.",
          "type": "string"
        },
        "reserveId": {
          "description": "Gets or sets the reserve identifier.",
          "type": "string"
        },
        "lssExportFlag": {
          "description": "Gets or sets the LSS export flag.",
          "type": "string"
        },
        "lssExportDbValue": {
          "description": "Gets or sets the LSS export database value.",
          "type": "string"
        },
        "lssExportExportToExcelValue": {
          "description": "Gets or sets the LSS export export to excel value.",
          "type": "string"
        },
        "lssExport": {
          "description": "Gets or sets the LSS export.",
          "type": "string"
        },
        "policyid": {
          "description": "Gets or sets the policyid.",
          "type": "string"
        },
        "coverageTypeCode": {
          "description": "Gets or sets the coverage type code.",
          "type": "string"
        },
        "reserveType": {
          "description": "Gets or sets the type of the reserve.",
          "type": "string"
        },
        "statusCodeDescription": {
          "description": "Gets or sets the status code description.",
          "type": "string"
        },
        "policyUnitRowId": {
          "description": "Gets or sets the policy unit row identifier.",
          "type": "string"
        },
        "unitId": {
          "description": "Gets or sets the unit identifier.",
          "type": "string"
        },
        "lossType": {
          "description": "Gets or sets the name of the loss type.",
          "type": "string"
        },
        "lossTypeCode": {
          "description": "Gets or sets the loss type code.",
          "type": "string"
        },
        "policyCoverageLossRowId": {
          "description": "Gets or sets the policy coverage loss row identifier.",
          "type": "string"
        },
        "categoryCode": {
          "description": "Gets or sets the category code.",
          "type": "string"
        },
        "disabilityCategory": {
          "description": "Gets or sets the disability category.",
          "type": "string"
        },
        "reserveCategoryDescription": {
          "description": "Gets or sets the reserve category description.",
          "type": "string"
        },
        "disabilityCategoryDescription": {
          "description": "Gets or sets the disability category description.",
          "type": "string"
        },
        "coveargeSequenceNumber": {
          "description": "Gets or sets the covearge sequence number.",
          "type": "string"
        },
        "adjusterDetails": {
          "description": "Gets or sets the adjuster details.",
          "type": "string"
        },
        "reserveStatusParent": {
          "description": "Gets or sets the reserve status parent.",
          "type": "string"
        },
        "transactionSequenceNumber": {
          "description": "Gets or sets the transaction sequence number.",
          "type": "string"
        },
        "coverageKey": {
          "description": "Gets or sets the coverage key.",
          "type": "string"
        },
        "deductibleTypeCode": {
          "description": "Gets or sets the deductible type code.",
          "type": "string"
        },
        "restrictPaymentsFlag": {
          "format": "int32",
          "description": "Gets or sets the Restrict Payments Flag.",
          "type": "integer"
        },
        "isNotDeterminedDeductible": {
          "format": "int32",
          "description": "Gets or sets the Not Determined Flag.",
          "type": "integer"
        },
        "isNoneTypeDeductible": {
          "format": "int32",
          "description": "Gets or sets the None Type Deductible Flag.",
          "type": "integer"
        },
        "isDeductible": {
          "format": "int32",
          "description": "Gets or sets the isDeductible flag.",
          "type": "integer"
        },
        "deductibleRowId": {
          "description": "Gets or sets the deductible row identifier.",
          "type": "string"
        },
        "bExcludeReserve": {
          "description": "Gets or sets the deductible row identifier.",
          "type": "boolean"
        },
        "deductibleReserveTypeFlag": {
          "description": "Gets or sets the deductible reserve type flag.",
          "type": "string"
        },
        "currencyConversionDate": {
          "description": "Gets or sets the currency conversion date.",
          "type": "string"
        },
        "claimantName": {
          "description": "Gets or sets the name of the claimant.",
          "type": "string"
        },
        "claimantEid": {
          "description": "Gets or sets the claimant eid.",
          "type": "string"
        },
        "unitName": {
          "description": "Gets or sets the name of the unit.",
          "type": "string"
        },
        "policyName": {
          "description": "Gets or sets the name of the policy.",
          "type": "string"
        },
        "coverageType": {
          "description": "Gets or sets the name of the coverage.",
          "type": "string"
        },
        "isXybionSubmitted": {
          "description": "Gets or sets a value indicating whether [IsXybionSubmitted].",
          "type": "boolean"
        },
        "xybionExportFlag": {
          "format": "int32",
          "description": "Gets or sets the Xybion export flag.",
          "type": "integer"
        },
        "isXybionMBREnabled": {
          "description": "Gets or sets a value indicating whether [xybion Enabled].",
          "type": "boolean"
        },
        "amaliExportFlag": {
          "format": "int32",
          "description": "Gets or sets the Amali export flag.",
          "type": "integer"
        },
        "isAmaliEnabled": {
          "description": "Gets or sets a value indicating whether [amali Enabled].",
          "type": "boolean"
        },
        "isAmaliSubmitted": {
          "description": "Gets or sets a value indicating whether [IsAmlSubmit].",
          "type": "boolean"
        },
        "isPMICalculated": {
          "description": "Gets or sets a value indicating whether this instance is pmi calculated.",
          "type": "boolean"
        },
        "isPMIApplicable": {
          "description": "Gets or sets a value indicating whether this instance is pmi applicable.",
          "type": "boolean"
        },
        "isAWDPartyCreated": {
          "description": "Gets or sets a value indicating whether this instance is awd party created.",
          "type": "boolean"
        },
        "isRecoveryReserve": {
          "description": "Gets or sets a value indicating whether this instance is recovery reserve.",
          "type": "boolean"
        },
        "links": {
          "description": "Gets or sets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "allowSelection": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        }
      }
    },
    "CurrencyTypeList": {
      "description": "Returns Currency Type List",
      "type": "object",
      "properties": {
        "currencyType": {
          "description": "Gets or sets the type of the currency.",
          "type": "string"
        },
        "currencyTypeCode": {
          "format": "int32",
          "description": "Gets or sets the currency type code.",
          "type": "integer"
        },
        "currencyTypeDescription": {
          "description": "Gets or sets the currency type desc.",
          "type": "string"
        },
        "links": {
          "description": "Gets or sets the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "DataRelatedToAutoCheck": {
      "description": "Data Related to Auto Check",
      "type": "object",
      "properties": {
        "reserveId": {
          "description": "Gets or sets the reserve identifier.",
          "type": "string"
        },
        "queryStringForAutoCheck": {
          "description": "Gets or sets the query string for automatic check.",
          "type": "string"
        }
      }
    },
    "CalcOption": {
      "type": "object",
      "properties": {
        "title": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "calcType": {
          "description": "Gets or sets the type of the calculate.",
          "type": "string"
        }
      }
    },
    "FinancialSummary": {
      "description": "Financial Summary.",
      "type": "object",
      "properties": {
        "metaData": {
          "description": "Gets or sets the metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "viewModel": {
          "$ref": "#/definitions/FinancialSummaryViewModel",
          "description": "Gets or sets the view model."
        }
      }
    },
    "FinancialSummaryViewModel": {
      "description": "Financial Summary ViewModel.",
      "type": "object",
      "properties": {
        "tableViewModel": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "chartViewModel": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "Funds": {
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int32",
          "type": "integer"
        },
        "addr1": {
          "type": "string"
        },
        "addr2": {
          "type": "string"
        },
        "addr3": {
          "type": "string"
        },
        "addr4": {
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "applyPayments2Cvg": {
          "type": "boolean"
        },
        "approverId": {
          "format": "int32",
          "type": "integer"
        },
        "approveUser": {
          "type": "string"
        },
        "autoCheckDetail": {
          "type": "string"
        },
        "autoCheckFlag": {
          "type": "boolean"
        },
        "batchNumber": {
          "format": "int32",
          "type": "integer"
        },
        "billTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "checkMemo": {
          "type": "string"
        },
        "checkMemo_HTMLComments": {
          "type": "string"
        },
        "checkTotal": {
          "format": "double",
          "type": "number"
        },
        "city": {
          "type": "string"
        },
        "claimantEid": {
          "format": "int32",
          "type": "integer"
        },
        "claimCurrencyAmount": {
          "format": "double",
          "type": "number"
        },
        "claimCurrencyType": {
          "$ref": "#/definitions/Codes"
        },
        "claimId": {
          "format": "int32",
          "type": "integer"
        },
        "claimNumber": {
          "type": "string"
        },
        "clearedFlag": {
          "type": "boolean"
        },
        "collectionFlag": {
          "type": "boolean"
        },
        "combinedPayFlag": {
          "type": "boolean"
        },
        "comments": {
          "type": "string"
        },
        "countryCode": {
          "$ref": "#/definitions/Codes"
        },
        "county": {
          "type": "string"
        },
        "crc": {
          "format": "int32",
          "type": "integer"
        },
        "ctlNumber": {
          "type": "string"
        },
        "dateOfCheck": {
          "type": "string"
        },
        "deductibleCategory": {
          "format": "int32",
          "type": "integer"
        },
        "disableOverRideDed": {
          "type": "boolean"
        },
        "dormancyStatus": {
          "format": "int32",
          "type": "integer"
        },
        "dstrbnType": {
          "$ref": "#/definitions/Codes"
        },
        "dttmApproval": {
          "type": "string"
        },
        "eftDate": {
          "type": "string"
        },
        "eftFileName": {
          "type": "string"
        },
        "enclosureFlag": {
          "type": "boolean"
        },
        "eobPrintDate": {
          "type": "string"
        },
        "eobPrintedBy": {
          "type": "string"
        },
        "filed1099Flag": {
          "type": "boolean"
        },
        "finalPaymentFlag": {
          "type": "boolean"
        },
        "firstName": {
          "type": "string"
        },
        "htmlComments": {
          "type": "string"
        },
        "isCheckReset": {
          "type": "boolean"
        },
        "isEFTPayment": {
          "type": "boolean"
        },
        "isLssPayHold": {
          "type": "boolean"
        },
        "isSaveCallForWithholding": {
          "type": "boolean"
        },
        "isSupplementalPay": {
          "type": "boolean"
        },
        "isTransactionVoidedInDb": {
          "type": "boolean"
        },
        "lastName": {
          "type": "string"
        },
        "mailToAddressId": {
          "$ref": "#/definitions/Lookups"
        },
        "mailToEid": {
          "$ref": "#/definitions/Lookups"
        },
        "manualCheckFlag": {
          "type": "boolean"
        },
        "middleName": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "notes_HTMLComments": {
          "type": "string"
        },
        "numOfPaidDays": {
          "format": "int32",
          "type": "integer"
        },
        "offSetFlag": {
          "type": "boolean"
        },
        "parentTransId": {
          "format": "int32",
          "type": "integer"
        },
        "payeeEid": {
          "$ref": "#/definitions/Lookups"
        },
        "payeeTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "paymentFlag": {
          "type": "boolean"
        },
        "payToTheOrderOf": {
          "type": "string"
        },
        "pmtCurrencyAmount": {
          "format": "double",
          "type": "number"
        },
        "pmtCurrencyType": {
          "$ref": "#/definitions/Codes"
        },
        "policyCurrencyAmount": {
          "format": "double",
          "type": "number"
        },
        "policyCurrencyType": {
          "format": "int32",
          "type": "integer"
        },
        "precheckFlag": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "reissueBy": {
          "type": "string"
        },
        "reissueDate": {
          "type": "string"
        },
        "reissueFlag": {
          "type": "boolean"
        },
        "reissueParentID": {
          "format": "int32",
          "type": "integer"
        },
        "reissueReasonCode": {
          "format": "int32",
          "type": "integer"
        },
        "resubmitFlag": {
          "type": "boolean"
        },
        "rollupId": {
          "format": "int32",
          "type": "integer"
        },
        "settlementFlag": {
          "type": "boolean"
        },
        "stateId": {
          "$ref": "#/definitions/Codes"
        },
        "statusCode": {
          "$ref": "#/definitions/Codes"
        },
        "stopPayDate": {
          "type": "string"
        },
        "stopPayFlag": {
          "type": "boolean"
        },
        "subAccountId": {
          "format": "int32",
          "type": "integer"
        },
        "suppPaymentFlag": {
          "type": "boolean"
        },
        "taxPaymentFlag": {
          "type": "boolean"
        },
        "transactionReason": {
          "$ref": "#/definitions/Codes"
        },
        "transDate": {
          "type": "string"
        },
        "transId": {
          "format": "int32",
          "type": "integer"
        },
        "transNumber": {
          "format": "int64",
          "type": "integer"
        },
        "unitId": {
          "format": "int32",
          "type": "integer"
        },
        "voidDate": {
          "type": "string"
        },
        "voidFlag": {
          "type": "boolean"
        },
        "voidReason": {
          "type": "string"
        },
        "voidReason_HTMLComments": {
          "type": "string"
        },
        "voucherFlag": {
          "type": "boolean"
        },
        "weeksPaidCode": {
          "$ref": "#/definitions/Codes"
        },
        "withholdingChildFlag": {
          "type": "boolean"
        },
        "withholdingPMTFlag": {
          "type": "boolean"
        },
        "withholdingType": {
          "$ref": "#/definitions/Codes"
        },
        "zipCode": {
          "type": "string"
        },
        "mailToEntity": {
          "$ref": "#/definitions/Entity"
        },
        "mailToAddress": {
          "$ref": "#/definitions/Address"
        },
        "fundsTransSplit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundsTransSplit"
          }
        },
        "fundsLss": {
          "$ref": "#/definitions/FundsLss"
        },
        "stopPayStatus": {
          "$ref": "#/definitions/Codes"
        },
        "stopPayReason": {
          "type": "string"
        },
        "gstCategory": {
          "$ref": "#/definitions/Codes"
        },
        "fundsGST": {
          "$ref": "#/definitions/FundsGST"
        },
        "gstSettlementFlag": {
          "type": "boolean"
        },
        "stopPayReasonCode": {
          "$ref": "#/definitions/Codes"
        },
        "nameType": {
          "$ref": "#/definitions/CodeType"
        },
        "recoverableStatusCode": {
          "$ref": "#/definitions/Codes"
        },
        "paygApplied": {
          "type": "boolean"
        },
        "readyToPrint": {
          "type": "boolean"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "legacyUniqueIdentifier": {
          "type": "string"
        },
        "addressId": {
          "format": "int32",
          "type": "integer"
        },
        "addr1": {
          "type": "string"
        },
        "addr2": {
          "type": "string"
        },
        "addr3": {
          "type": "string"
        },
        "addr4": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/Codes"
        },
        "state": {
          "$ref": "#/definitions/Codes"
        },
        "zipCode": {
          "type": "string"
        },
        "addedByUser": {
          "type": "string"
        },
        "updatedByUser": {
          "type": "string"
        },
        "dttmRcdAdded": {
          "type": "string"
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "searchString": {
          "type": "string"
        },
        "addressSeqNum": {
          "format": "int32",
          "type": "integer"
        },
        "deletedFlag": {
          "type": "boolean"
        },
        "addressVerifiedFlag": {
          "type": "boolean"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "FundsTransSplit": {
      "type": "object",
      "properties": {
        "legacyUniqueIdentifier": {
          "type": "string"
        },
        "pmtCurrencyType": {
          "type": "string"
        },
        "rcRowId": {
          "format": "int32",
          "type": "integer"
        },
        "pmtCurrencyAmount": {
          "format": "double",
          "type": "number"
        },
        "pmtCurrencyAutoDiscount": {
          "format": "double",
          "type": "number"
        },
        "claimCurrencyAmount": {
          "format": "double",
          "type": "number"
        },
        "claimCurrencyAutoDiscount": {
          "format": "double",
          "type": "number"
        },
        "sumAmount": {
          "format": "double",
          "type": "number"
        },
        "splitRowId": {
          "format": "int32",
          "type": "integer"
        },
        "transId": {
          "format": "int32",
          "type": "integer"
        },
        "cmbTransactionType": {
          "format": "int32",
          "type": "integer"
        },
        "glAccountCode": {
          "$ref": "#/definitions/Codes"
        },
        "fromDate": {
          "type": "string"
        },
        "toDate": {
          "type": "string"
        },
        "invoicedBy": {
          "type": "string"
        },
        "invoiceAmount": {
          "format": "double",
          "type": "number"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "poNumber": {
          "type": "string"
        },
        "crc": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceDate": {
          "type": "string"
        },
        "suppPaymentFlag": {
          "type": "boolean"
        },
        "autoDiscount": {
          "type": "string"
        },
        "isFirstFinal": {
          "type": "boolean"
        },
        "withholdingSplitFlag": {
          "type": "boolean"
        },
        "parentSplitRowId": {
          "format": "int32",
          "type": "integer"
        },
        "controlReqFlag": {
          "type": "boolean"
        },
        "fundsCRStatus": {
          "$ref": "#/definitions/Codes"
        },
        "updatePolSys": {
          "type": "boolean"
        },
        "policySystemId": {
          "format": "int32",
          "type": "integer"
        },
        "isOverrideDedProcessing": {
          "type": "boolean"
        },
        "policyCurrencyAmount": {
          "format": "double",
          "type": "number"
        },
        "currencyConversionDate": {
          "type": "string"
        },
        "pmtToBaseCurRate": {
          "format": "double",
          "type": "number"
        },
        "pmtToClaimCurRate": {
          "format": "double",
          "type": "number"
        },
        "pmtToPolicyCurRate": {
          "format": "double",
          "type": "number"
        },
        "invoiceCurrencyCode": {
          "$ref": "#/definitions/Codes"
        },
        "baseCurrencyType": {
          "type": "string"
        },
        "useMultiCurrency": {
          "type": "boolean"
        },
        "financialKey": {
          "type": "object"
        },
        "covgSeqNum": {
          "type": "string"
        },
        "transSeqNum": {
          "type": "string"
        },
        "coverageKey": {
          "type": "string"
        },
        "isEligibleForDedProcessing": {
          "type": "boolean"
        },
        "cmbUnit": {
          "format": "int32",
          "type": "integer"
        },
        "cmbCoverageType": {
          "format": "int32",
          "type": "integer"
        },
        "cmbPolicy": {
          "format": "int32",
          "type": "integer"
        },
        "selectedPolicyName": {
          "type": "string"
        },
        "selectedUnitName": {
          "type": "string"
        },
        "cmbSubReserveType": {
          "format": "int32",
          "type": "integer"
        },
        "cmbReserveType": {
          "format": "int32",
          "type": "integer"
        },
        "rsvBalance": {
          "type": "string"
        },
        "rsvPaid": {
          "type": "string"
        },
        "coverageTypeCode": {
          "format": "int32",
          "type": "integer"
        },
        "coverageText": {
          "type": "string"
        },
        "disableOverRideDed": {
          "type": "boolean"
        },
        "fundsSplitBenefit": {
          "$ref": "#/definitions/FundsSplitBenefit"
        },
        "overrideDedFlagVisible": {
          "type": "boolean"
        },
        "notDetDedCodeID": {
          "format": "int32",
          "type": "integer"
        },
        "selectedDedVal": {
          "type": "string"
        },
        "transTypeCodeDesc": {
          "type": "string"
        },
        "reserveTypeCodeDesc": {
          "type": "string"
        },
        "disabilityTypeCodeDesc": {
          "type": "string"
        },
        "lossTypeCodeDesc": {
          "type": "string"
        },
        "reserveSubTypeCodeDesc": {
          "type": "string"
        },
        "cmbdisablitycat": {
          "format": "int32",
          "type": "integer"
        },
        "disabilityLossType1": {
          "format": "int32",
          "type": "integer"
        },
        "cmbCoverageLossType": {
          "format": "int32",
          "type": "integer"
        },
        "displayInvoiceAmount": {
          "type": "string"
        },
        "displaySplitAmount": {
          "type": "string"
        },
        "brsInvoiceDetail": {
          "$ref": "#/definitions/BrsInvoiceDetail"
        },
        "eobRemark": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "hcpcsCode": {
          "type": "string"
        },
        "hcpcsDetails": {
          "type": "string"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "FundsLss": {
      "type": "object",
      "properties": {
        "rowId": {
          "format": "int32",
          "type": "integer"
        },
        "transId": {
          "format": "int32",
          "type": "integer"
        },
        "lssInvoiceFinalDate": {
          "type": "string"
        },
        "lssInvoiceRequestedAmount": {
          "format": "double",
          "type": "number"
        },
        "lssApprovedAmount": {
          "format": "double",
          "type": "number"
        },
        "lssPayDiscount": {
          "format": "double",
          "type": "number"
        },
        "isLssFeeFlag": {
          "type": "boolean"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "FundsGST": {
      "type": "object",
      "properties": {
        "gstRate": {
          "format": "double",
          "type": "number"
        },
        "itcPayee": {
          "format": "double",
          "type": "number"
        },
        "itcInsurer": {
          "format": "double",
          "type": "number"
        },
        "descAdjAmount": {
          "format": "double",
          "type": "number"
        },
        "incAdjAmt": {
          "format": "double",
          "type": "number"
        },
        "gstAmount": {
          "format": "double",
          "type": "number"
        },
        "itcInsurerAmount": {
          "format": "double",
          "type": "number"
        },
        "itcPayeeAmt": {
          "format": "double",
          "type": "number"
        },
        "fundsAmtExcGST": {
          "format": "double",
          "type": "number"
        },
        "fundsAmtIncGST": {
          "format": "double",
          "type": "number"
        },
        "excessInsurance": {
          "format": "double",
          "type": "number"
        },
        "rowId": {
          "format": "int32",
          "type": "integer"
        },
        "transId": {
          "format": "int32",
          "type": "integer"
        },
        "pmtToBaseCurRate": {
          "format": "double",
          "type": "number"
        },
        "pmtToClaimCurRate": {
          "format": "double",
          "type": "number"
        },
        "pmtToPolicyCurRate": {
          "format": "double",
          "type": "number"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "FundsSplitBenefit": {
      "type": "object",
      "properties": {
        "addtlComments": {
          "type": "string"
        },
        "addtlComments_HTMLComments": {
          "type": "string"
        },
        "daysCalculationMethod": {
          "$ref": "#/definitions/Codes"
        },
        "eligibleAmount": {
          "format": "double",
          "type": "number"
        },
        "ftsBenefitRowId": {
          "format": "int32",
          "type": "integer"
        },
        "fundsSplitRowId": {
          "format": "int32",
          "type": "integer"
        },
        "ineligibleAmount": {
          "format": "double",
          "type": "number"
        },
        "numberofServiceDays": {
          "format": "int32",
          "type": "integer"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    },
    "BrsInvoiceDetail": {
      "type": "object",
      "properties": {
        "invoiceDetailId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceId": {
          "format": "int32",
          "type": "integer"
        },
        "fundsSplitRowId": {
          "format": "int32",
          "type": "integer"
        },
        "tableCode": {
          "format": "int32",
          "type": "integer"
        },
        "percentile": {
          "type": "string"
        },
        "placeOfSerCode": {
          "$ref": "#/definitions/Codes"
        },
        "typeOfSerCode": {
          "$ref": "#/definitions/Codes"
        },
        "billingCodeText": {
          "type": "string"
        },
        "unitsBilledNum": {
          "format": "double",
          "type": "number"
        },
        "unitsBilledType": {
          "format": "int32",
          "type": "integer"
        },
        "amountBilled": {
          "format": "double",
          "type": "number"
        },
        "scheduledAmount": {
          "format": "double",
          "type": "number"
        },
        "amountReduced": {
          "format": "double",
          "type": "number"
        },
        "amountReducedPercent": {
          "type": "string"
        },
        "amountToPay": {
          "format": "double",
          "type": "number"
        },
        "amountSaved": {
          "format": "double",
          "type": "number"
        },
        "toothNumber": {
          "type": "boolean"
        },
        "surfaceText": {
          "type": "string"
        },
        "modifierCode": {
          "$ref": "#/definitions/Codes"
        },
        "quantity": {
          "type": "string"
        },
        "store": {
          "type": "string"
        },
        "contractExists": {
          "format": "int32",
          "type": "integer"
        },
        "overrideType": {
          "format": "int32",
          "type": "integer"
        },
        "contractAmount": {
          "format": "double",
          "type": "number"
        },
        "discount": {
          "format": "double",
          "type": "number"
        },
        "amountAllowed": {
          "format": "double",
          "type": "number"
        },
        "baseAmount": {
          "format": "double",
          "type": "number"
        },
        "zipCode": {
          "type": "string"
        },
        "feeTableAmt": {
          "format": "double",
          "type": "number"
        },
        "perDiemAmt": {
          "format": "double",
          "type": "number"
        },
        "stopLossAmt": {
          "format": "double",
          "type": "number"
        },
        "stopLossFlag": {
          "format": "int32",
          "type": "integer"
        },
        "feeDataSource": {
          "format": "int32",
          "type": "integer"
        },
        "feeTableState": {
          "type": "string"
        },
        "feeTableStudy": {
          "type": "string"
        },
        "feeDataRevision": {
          "type": "string"
        },
        "prescripNo": {
          "type": "string"
        },
        "drugName": {
          "type": "string"
        },
        "prescripDate": {
          "type": "string"
        },
        "daysSupplied": {
          "format": "int32",
          "type": "integer"
        },
        "dateFilled": {
          "type": "string"
        },
        "revenueCode": {
          "format": "int32",
          "type": "integer"
        },
        "phyEid": {
          "format": "int32",
          "type": "integer"
        },
        "medSupplyFlag": {
          "type": "boolean"
        },
        "diagRefNo": {
          "type": "string"
        },
        "tableCode2": {
          "format": "int32",
          "type": "integer"
        },
        "brsFeeAmt1": {
          "format": "double",
          "type": "number"
        },
        "brsFeeAmt2": {
          "format": "double",
          "type": "number"
        },
        "medsQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "rxInd": {
          "format": "int32",
          "type": "integer"
        },
        "certification": {
          "format": "int32",
          "type": "integer"
        },
        "rxUsualCharge": {
          "format": "double",
          "type": "number"
        },
        "phyPharmNdc": {
          "type": "string"
        },
        "phyPharmNdcDes": {
          "type": "string"
        },
        "flLicense": {
          "type": "string"
        },
        "dispensed": {
          "format": "int32",
          "type": "integer"
        },
        "hcpcsCode": {
          "type": "string"
        },
        "purchasedInd": {
          "format": "int32",
          "type": "integer"
        },
        "billType": {
          "format": "int32",
          "type": "integer"
        },
        "denyLineItem": {
          "type": "boolean"
        },
        "phyPharmNdcSec": {
          "type": "string"
        },
        "phyPharmNdcSecDes": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "scheduledType": {
          "format": "int32",
          "type": "integer"
        },
        "inpatientType": {
          "format": "int32",
          "type": "integer"
        },
        "outpatientType": {
          "format": "int32",
          "type": "integer"
        },
        "feeSched": {
          "format": "int32",
          "type": "integer"
        },
        "feeSchedList": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "feeSched2": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "type": "string"
        },
        "stateCode": {
          "type": "string"
        },
        "fromDate": {
          "type": "string"
        },
        "toDate": {
          "type": "string"
        },
        "splitRowId": {
          "format": "int32",
          "type": "integer"
        },
        "rcRowId": {
          "format": "int32",
          "type": "integer"
        },
        "reserveSubType": {
          "$ref": "#/definitions/Codes"
        },
        "reserveType": {
          "$ref": "#/definitions/Codes"
        },
        "transId": {
          "format": "int32",
          "type": "integer"
        },
        "providerEId": {
          "format": "int32",
          "type": "integer"
        },
        "calcType": {
          "format": "int32",
          "type": "integer"
        },
        "providerName": {
          "type": "string"
        },
        "contrStartDate": {
          "type": "string"
        },
        "contrEndDate": {
          "type": "string"
        },
        "contrComments": {
          "type": "string"
        },
        "contrAmount": {
          "type": "string"
        },
        "contrFirstRate": {
          "type": "string"
        },
        "contrFirstRateChanged": {
          "format": "int32",
          "type": "integer"
        },
        "contrSecondRate": {
          "type": "string"
        },
        "contrSecondRateChanged": {
          "format": "int32",
          "type": "integer"
        },
        "contrLastRate": {
          "type": "string"
        },
        "contrPercentage": {
          "type": "string"
        },
        "contrPercentage2": {
          "type": "string"
        },
        "contrPercentageBill": {
          "type": "string"
        },
        "transTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "follUpLabel": {
          "type": "string"
        },
        "follUpTextLabel": {
          "type": "string"
        },
        "feeSchedUsed": {
          "format": "int32",
          "type": "integer"
        },
        "invoicedBy": {
          "type": "string"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "invoiceDate": {
          "type": "string"
        },
        "overrideOption": {
          "format": "int32",
          "type": "integer"
        },
        "override1": {
          "type": "string"
        },
        "override": {
          "format": "int32",
          "type": "integer"
        },
        "amountAllowedInFormat": {
          "type": "string"
        },
        "ovrBilledAmount": {
          "format": "double",
          "type": "number"
        },
        "ovrDiscBilledAmount": {
          "format": "double",
          "type": "number"
        },
        "ovrContractAmount": {
          "format": "double",
          "type": "number"
        },
        "ovrDiscContractAmount": {
          "format": "double",
          "type": "number"
        },
        "ovrSchedAmount": {
          "format": "double",
          "type": "number"
        },
        "ovrSchedAmountAlt": {
          "format": "double",
          "type": "number"
        },
        "ovrDiscSchedAmount": {
          "format": "double",
          "type": "number"
        },
        "ovrPerDiemAmount": {
          "format": "double",
          "type": "number"
        },
        "ovrPerDiemStopLossAmount": {
          "format": "double",
          "type": "number"
        },
        "overrideAmount": {
          "format": "double",
          "type": "number"
        },
        "overridePerDiemAmount": {
          "format": "double",
          "type": "number"
        },
        "feeSchedDesc2": {
          "type": "string"
        },
        "specialtyDesc": {
          "type": "string"
        },
        "billingCodeCid": {
          "type": "string"
        },
        "billingCode": {
          "$ref": "#/definitions/Codes"
        },
        "countyList": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "glAccountCode": {
          "format": "int32",
          "type": "integer"
        },
        "glAccountList": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "outpatientTypeList": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "inpatientTypeList": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "isFirstFinal": {
          "type": "boolean"
        },
        "lob": {
          "format": "int32",
          "type": "integer"
        },
        "policyID": {
          "format": "int32",
          "type": "integer"
        },
        "unitID": {
          "format": "int32",
          "type": "integer"
        },
        "polCvgID": {
          "format": "int32",
          "type": "integer"
        },
        "resTypeCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "cvgLossID": {
          "format": "int32",
          "type": "integer"
        },
        "step": {
          "format": "int32",
          "type": "integer"
        },
        "coverageTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "disabilityCatCode": {
          "$ref": "#/definitions/Codes"
        },
        "lossTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "disabilityTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "reserveTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "reserveSubTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "policyList": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "unitList": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "billTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "physicianLookUp": {
          "$ref": "#/definitions/Codes"
        },
        "scheduledTypeCode": {
          "$ref": "#/definitions/Codes"
        },
        "certificationCode": {
          "$ref": "#/definitions/Codes"
        },
        "purchasedIndCode": {
          "$ref": "#/definitions/Codes"
        },
        "rxIndCode": {
          "$ref": "#/definitions/Codes"
        },
        "dispensedCode": {
          "$ref": "#/definitions/Codes"
        },
        "phyLookUpChanged": {
          "type": "boolean"
        },
        "eobList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "diagnosisList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "diagnosisListicd10": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "modifierList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codes"
          }
        },
        "specialtyCode": {
          "type": "string"
        },
        "specialtyCodeFactor": {
          "type": "string"
        },
        "specialtyCodeList": {
          "type": "string"
        },
        "_links": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          }
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplementalField"
          }
        },
        "dttmRcdLastUpd": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "associatedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "_options": {
          "$ref": "#/definitions/HalOptions",
          "readOnly": true
        },
        "sysExData": {
          "type": "object"
        },
        "sysExDataIC": {
          "type": "object"
        }
      }
    }
  }
}